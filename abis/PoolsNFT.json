{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "DENOMINATOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "baseURI",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "buyRoyalty",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "buyRoyaltyTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "royaltyPricePaid",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "calcGRETHShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "grethReward", "type": "uint256", "internalType": "uint256" },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "actors", "type": "address[]", "internalType": "address[]" },
        {
          "name": "grethShares",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcRoyaltyPriceShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "compensationShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "poolOwnerShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "reserveShare",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "ownerShare", "type": "uint256", "internalType": "uint256" },
        {
          "name": "oldRoyaltyPrice",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "newRoyaltyPrice",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcRoyaltyShares",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "profit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "receivers",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deposited",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "exit",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getConfig",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "longNumberMax", "type": "uint8", "internalType": "uint8" },
        { "name": "hedgeNumberMax", "type": "uint8", "internalType": "uint8" },
        { "name": "extraCoef", "type": "uint256", "internalType": "uint256" },
        {
          "name": "priceVolatility",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "returnPercentLongSell",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "returnPercentHedgeSell",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "returnPercentHedgeRebuy",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeeConfig",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "longSellFeeCoef",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellFeeCoef",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeRebuyFeeCoef",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolIdsOf",
      "inputs": [
        { "name": "poolOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "poolIdsOwnedByPoolOwner",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPoolNFTInfosBy",
      "inputs": [
        { "name": "_poolIds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [
        {
          "name": "poolNFTInfos",
          "type": "tuple[]",
          "internalType": "struct IPoolsNFTLens.PoolNFTInfo[]",
          "components": [
            { "name": "poolId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "strategyId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "pool", "type": "address", "internalType": "address" },
            {
              "name": "config",
              "type": "tuple",
              "internalType": "struct IURUS.Config",
              "components": [
                {
                  "name": "longNumberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "hedgeNumberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "extraCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "priceVolatilityPercent",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentLongSell",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentHedgeSell",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "returnPercentHedgeRebuy",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "feeConfig",
              "type": "tuple",
              "internalType": "struct IURUS.FeeConfig",
              "components": [
                {
                  "name": "longSellFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeSellFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "hedgeRebuyFeeCoef",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "oracleQuoteTokenPerBaseToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "oracleQuoteTokenPerFeeToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "quoteToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "baseToken",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "feeTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "quoteTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "baseTokenSymbol",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "oracleQuoteTokenPerBaseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "oracleQuoteTokenPerFeeTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "quoteTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "baseTokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "quoteTokenAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "baseTokenAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "activeCapital",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "startTimestamp",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalProfits",
              "type": "tuple",
              "internalType": "struct IURUS.TotalProfits",
              "components": [
                {
                  "name": "quoteTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenYieldProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "quoteTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "baseTokenTradeProfit",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "roi",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.ROI",
              "components": [
                {
                  "name": "ROINumerator",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ROIDeniminator",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "ROIPeriod",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "apr",
              "type": "tuple",
              "internalType": "struct IPoolsNFTLens.APR",
              "components": [
                {
                  "name": "APRNumerator",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "APRDenominator",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "royaltyPrice",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositions",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IPoolsNFTLens.Positions",
          "components": [
            {
              "name": "long",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "hedge",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPositionsBy",
      "inputs": [
        { "name": "_poolIds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IPoolsNFTLens.Positions[]",
          "components": [
            {
              "name": "long",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            },
            {
              "name": "hedge",
              "type": "tuple",
              "internalType": "struct IURUS.Position",
              "components": [
                { "name": "number", "type": "uint8", "internalType": "uint8" },
                {
                  "name": "numberMax",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "priceMin",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "liquidity",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                { "name": "qty", "type": "uint256", "internalType": "uint256" },
                {
                  "name": "price",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feeQty",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "feePrice",
                  "type": "uint256",
                  "internalType": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoyaltyReceiver",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getThresholds",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "longBuyPriceMin",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "longSellQuoteTokenAmountThreshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "longSellSwapPriceThreshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellInitPriceThresholdHigh",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellInitPriceThresholdLow",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellLiquidity",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellQuoteTokenAmountThreshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellTargetPrice",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeSellSwapPriceThreshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeRebuyBaseTokenAmountThreshold",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "hedgeRebuySwapPriceThreshold",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grETH",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IGRETH" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethGrinderShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethPoolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grethRoyaltyReceiverShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grind",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindOp",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "op", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindOpTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "op", "type": "uint8", "internalType": "uint8" },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isGrinded", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grindTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "grinder", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "isGrinded", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grinderAI",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IGrinderAI" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "_poolsNFTLens",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_grETH", "type": "address", "internalType": "address" },
        { "name": "_grinderAI", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isAgentOf",
      "inputs": [
        { "name": "_ownerOf", "type": "address", "internalType": "address" },
        { "name": "_agent", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDepositorOf",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "_depositor", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isDisapprovedGrinderAI",
      "inputs": [
        { "name": "_ownerOf", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStrategyStopped",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "minDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "quoteToken", "type": "address", "internalType": "address" },
        { "name": "baseToken", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mintTo",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "quoteToken", "type": "address", "internalType": "address" },
        { "name": "baseToken", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "minter",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address payable" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingOwner",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "address payable" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolIds",
      "inputs": [
        { "name": "pool", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pools",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "poolsNFTLens",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPoolsNFTLens"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rebalance",
      "inputs": [
        { "name": "poolId0", "type": "uint256", "internalType": "uint256" },
        { "name": "poolId1", "type": "uint256", "internalType": "uint256" },
        { "name": "rebalance0", "type": "uint8", "internalType": "uint8" },
        { "name": "rebalance1", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "royaltyInfo",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "salePrice", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        {
          "name": "royaltyAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPrice",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceCompensationShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceInitNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPricePoolOwnerShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyPriceReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReceiver",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReceiverShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "royaltyReserveShareNumerator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint16", "internalType": "uint16" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAgent",
      "inputs": [
        { "name": "_agent", "type": "address", "internalType": "address" },
        { "name": "_agentApproval", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDepositor",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "depositor", "type": "address", "internalType": "address" },
        { "name": "_depositorApproval", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGRETH",
      "inputs": [
        { "name": "_grETH", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGRETHShares",
      "inputs": [
        {
          "name": "_grethGrinderShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethPoolOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_grethRoyaltyReceiverShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setGrinderAI",
      "inputs": [
        { "name": "_grinderAI", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMaxDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "_maxDeposit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMinDeposit",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "_minDeposit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPoolsNFTLens",
      "inputs": [
        {
          "name": "_poolsNFTLens",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyPriceInitNumerator",
      "inputs": [
        {
          "name": "_royaltyPriceInitNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyPriceShares",
      "inputs": [
        {
          "name": "_royaltyPriceCompensationShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPriceReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPricePoolOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyPriceOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRoyaltyShares",
      "inputs": [
        {
          "name": "_poolOwnerRoyaltyShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyReceiverShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyReserveShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        },
        {
          "name": "_royaltyOwnerShareNumerator",
          "type": "uint16",
          "internalType": "uint16"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStrategyFactory",
      "inputs": [
        {
          "name": "_strategyFactory",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStrategyStopped",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" },
        { "name": "_isStrategyStopped", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "strategyFactory",
      "inputs": [
        { "name": "strategyId", "type": "uint16", "internalType": "uint16" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "tokenByIndex",
      "inputs": [
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenOfOwnerByIndex",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "uri", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDeposited",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalPools",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "poolId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address payable"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawTo",
      "inputs": [
        { "name": "poolId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        { "name": "withdrawn", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BuyRoyalty",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "buyer",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "paidPrice",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "pool",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Exit",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "baseTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Grind",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "op",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "grinder",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "isGrinded",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Mint",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "baseToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Rebalance",
      "inputs": [
        {
          "name": "poolId0",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "poolId1",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        {
          "name": "poolId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteToken",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "quoteTokenAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "DifferentOwnersOfPools", "inputs": [] },
    { "type": "error", "name": "DifferentTokens", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721EnumerableForbiddenBatchMint",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [
        { "name": "approver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721OutOfBoundsIndex",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "index", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "ExceededMaxDeposit", "inputs": [] },
    { "type": "error", "name": "InsufficientMinDeposit", "inputs": [] },
    { "type": "error", "name": "InvalidGRETHShares", "inputs": [] },
    { "type": "error", "name": "InvalidOp", "inputs": [] },
    { "type": "error", "name": "InvalidRoyaltyPriceInit", "inputs": [] },
    { "type": "error", "name": "InvalidRoyaltyPriceShare", "inputs": [] },
    { "type": "error", "name": "InvalidRoyaltyShares", "inputs": [] },
    { "type": "error", "name": "NoCapital", "inputs": [] },
    { "type": "error", "name": "NotAgent", "inputs": [] },
    { "type": "error", "name": "NotDepositor", "inputs": [] },
    { "type": "error", "name": "NotMatchPoolsNFT", "inputs": [] },
    { "type": "error", "name": "NotOwner", "inputs": [] },
    { "type": "error", "name": "NotOwnerOf", "inputs": [] },
    { "type": "error", "name": "NotOwnerOrPending", "inputs": [] },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "StrategyStopped", "inputs": [] }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1234:41173:70:-:0;;;7306:2133;;;;;;;;;-1:-1:-1;1380:113:36;;;;;;;;;-1:-1:-1;1380:113:36;;;;;;;;;;;;;;;;1446:13;1380:113;-1:-1:-1;1446:13:36;:::i;:::-;-1:-1:-1;1469:7:36;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;1857:1:46;2061:7;:21;-1:-1:-1;7358:1:70::1;7345:10;:14:::0;7369:12:::1;:34:::0;;-1:-1:-1;;;;;;7369:34:70;;::::1;::::0;;;7413:5:::1;:27:::0;;7429:10:::1;7413:27:::0;::::1;::::0;;;::::1;::::0;;7451:25:::1;:32:::0;;-1:-1:-1;;;;;;7678:38:70;;;;;;;1613:6:::1;::::0;7451:32:::1;7678:38:::0;7922:31;::::1;::::0;::::1;::::0;7620:42;7884:35;::::1;::::0;::::1;::::0;7807:74:::1;::::0;7564:40;7848:33;::::1;::::0;::::1;::::0;7499:47;7807:38;;::::1;;:74;:::i;:::-;:112;;;;:::i;:::-;:146;;;;:::i;:::-;:160;;;7799:169;;;;;;7979:26;:34:::0;;-1:-1:-1;;;;;;;;8132:41:70;;;;;;;1613:6:::1;::::0;7979:34:::1;-1:-1:-1::0;;;8345:34:70;::::1;::::0;::::1;::::0;-1:-1:-1;;;8314:28:70;::::1;::::0;::::1;::::0;8256:55:::1;::::0;8030:34;8285:26;::::1;::::0;::::1;::::0;7979:34;8256:26;;::::1;;:55;:::i;:::-;:86;;;;:::i;:::-;:123;;;;:::i;:::-;:138;;;8248:147;;;;;;8548:16;:24:::0;;-1:-1:-1;;;;;;;;8742:33:70;-1:-1:-1;;;8742:33:70;;;;;1613:6:::1;::::0;8917:42:::1;::::0;8548:24:::1;-1:-1:-1::0;;;8936:23:70;::::1;::::0;::::1;::::0;-1:-1:-1;;;8917:16:70;::::1;;:42;:::i;:::-;:57;;;8909:66;;;;;;9082:26;::::0;1613:6:::1;::::0;8993:130:::1;-1:-1:-1::0;;;9082:26:70;::::1;::::0;::::1;::::0;-1:-1:-1;;;9051:28:70;::::1;::::0;::::1;::::0;8993:55:::1;::::0;-1:-1:-1;;;9019:29:70;::::1;::::0;::::1;::::0;-1:-1:-1;;;8993:23:70;;::::1;;:55;:::i;:::-;:86;;;;:::i;:::-;:115;;;;:::i;:::-;:130;;;8985:139;;;;;;1234:41173:::0;;14:127:117;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:117;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:117;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:117;;;2500:26;2451:89;-1:-1:-1;;1308:1:117;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:117;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:117;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:117;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:117:o;2655:252::-;2746:6;2723:14;;;2739;;;2719:35;;2766:15;;2763:138;;;2823:10;2818:3;2814:20;2811:1;2804:31;2858:4;2855:1;2848:15;2886:4;2883:1;2876:15;2763:138;2655:252;;;;:::o;:::-;1234:41173:70;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;:::i;:::-;;;775:14:117;;768:22;750:41;;738:2;723:18;36796:195:70;;;;;;;;2677:40;;;;;;;;;;-1:-1:-1;2677:40:70;;;;-1:-1:-1;;;2677:40:70;;;;;;;;;976:6:117;964:19;;;946:38;;934:2;919:18;2677:40:70;802:188:117;3898:43:70;;;;;;;;;;-1:-1:-1;3898:43:70;;;;-1:-1:-1;;;3898:43:70;;;;;;36494:113;;;;;;;;;;-1:-1:-1;36565:35:70;;;;;;;;;;;;;;;;;36494:113;;;;;;;:::i;3496:154:36:-;;;;;;;;;;-1:-1:-1;3496:154:36;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2018:32:117;;;2000:51;;1988:2;1973:18;3496:154:36;1854:203:117;10720:220:70;;;;;;;;;;-1:-1:-1;10720:220:70;;;;;:::i;:::-;;:::i;3322:113:36:-;;;;;;;;;;-1:-1:-1;3322:113:36;;;;;:::i;:::-;;:::i;26303:115:70:-;;;;;;;;;;-1:-1:-1;26303:115:70;;;;;:::i;:::-;;:::i;38584:528::-;;;;;;;;;;-1:-1:-1;38584:528:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2062:102:39:-;;;;;;;;;;-1:-1:-1;2140:10:39;:17;2062:102;;;3659:25:117;;;3647:2;3632:18;2062:102:39;3513:177:117;9514:349:70;;;;;;;;;;-1:-1:-1;9514:349:70;;;;;:::i;:::-;;:::i;2981:42::-;;;;;;;;;;-1:-1:-1;2981:42:70;;;;-1:-1:-1;;;2981:42:70;;;;;;4142:578:36;;;;;;;;;;-1:-1:-1;4142:578:36;;;;;:::i;:::-;;:::i;5601:55:70:-;;;;;;;;;;-1:-1:-1;5601:55:70;;;;;:::i;:::-;;;;;;;;;;;;;;14028:823;;;;;;;;;;-1:-1:-1;14028:823:70;;;;;:::i;:::-;;:::i;5028:27::-;;;;;;;;;;-1:-1:-1;5028:27:70;;;;-1:-1:-1;;;;;5028:27:70;;;31874:275;;;;;;;;;;-1:-1:-1;31874:275:70;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6303:32:117;;;6285:51;;6367:2;6352:18;;6345:34;;;;6258:18;31874:275:70;6111:274:117;1934:39:70;;;;;;;;;;-1:-1:-1;1934:39:70;;;;;;;;3501:30;;;;;;;;;;-1:-1:-1;3501:30:70;;;;-1:-1:-1;;;3501:30:70;;;;;;1736:255:39;;;;;;;;;;-1:-1:-1;1736:255:39;;;;;:::i;:::-;;:::i;40361:193:70:-;;;;;;;;;;-1:-1:-1;40361:193:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2057:52::-;;;;;;;;;;-1:-1:-1;2057:52:70;;;;;;;;;;;2398:45;;;;;;;;;;-1:-1:-1;2398:45:70;;;;-1:-1:-1;;;2398:45:70;;;;;;39205:199;;;;;;;;;;-1:-1:-1;39205:199:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;16455:337::-;;;;;;;;;;-1:-1:-1;16455:337:70;;;;;:::i;:::-;;:::i;6407:52::-;;;;;;;;;;-1:-1:-1;6407:52:70;;;;;:::i;:::-;;;;;;;;;;;;;;6589;;;;;;;;;;-1:-1:-1;6589:52:70;;;;;:::i;:::-;;;;;;;;;;;;;;4786:132:36;;;;;;;;;;-1:-1:-1;4786:132:36;;;;;:::i;:::-;;:::i;20113:190:70:-;;;;;;;;;;-1:-1:-1;20113:190:70;;;;;:::i;:::-;;:::i;2236:226:39:-;;;;;;;;;;-1:-1:-1;2236:226:39;;;;;:::i;:::-;;:::i;2290:49:70:-;;;;;;;;;;-1:-1:-1;2290:49:70;;;;-1:-1:-1;;;2290:49:70;;;;;;6221:56;;;;;;;;;;-1:-1:-1;6221:56:70;;;;;:::i;:::-;;;;;;;;;;;;;;15923:177;;;;;;;;;;-1:-1:-1;15923:177:70;;;;;:::i;:::-;;:::i;17109:898::-;;;;;;;;;;-1:-1:-1;17109:898:70;;;;;:::i;:::-;;:::i;37145:236::-;;;;;;;;;;-1:-1:-1;37145:236:70;;;;;:::i;:::-;;:::i;5445:58::-;;;;;;;;;;-1:-1:-1;5445:58:70;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5445:58:70;;;18241:223;;;;;;;;;;-1:-1:-1;18241:223:70;;;;;:::i;:::-;;:::i;24186:1968::-;;;;;;;;;;-1:-1:-1;24186:1968:70;;;;;:::i;:::-;;:::i;2184:118:36:-;;;;;;;;;;-1:-1:-1;2184:118:36;;;;;:::i;:::-;;:::i;40954:689:70:-;;;;;;;;;;-1:-1:-1;40954:689:70;;;;;:::i;:::-;;:::i;:::-;;;;18484:25:117;;;18540:2;18525:18;;18518:34;;;;18568:18;;;18561:34;;;;18626:2;18611:18;;18604:34;;;;18669:3;18654:19;;18647:35;;;;18713:3;18698:19;;18691:35;;;;18757:3;18742:19;;18735:35;18801:3;18786:19;;18779:35;18845:3;18830:19;;18823:35;18889:3;18874:19;;18867:35;18933:3;18918:19;;18911:36;18471:3;18456:19;40954:689:70;18056:897:117;35934:101:70;;;;;;;;;;;;;:::i;4067:42::-;;;;;;;;;;-1:-1:-1;4067:42:70;;;;-1:-1:-1;;;4067:42:70;;;;;;5338:60;;;;;;;;;;-1:-1:-1;5338:60:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;1919:208:36;;;;;;;;;;-1:-1:-1;1919:208:36;;;;;:::i;:::-;;:::i;11686:147:70:-;;;;;;;;;;-1:-1:-1;11686:147:70;;;;;:::i;:::-;;:::i;29782:142::-;;;;;;;;;;-1:-1:-1;29782:142:70;;;;;:::i;:::-;;:::i;21443:528::-;;;;;;;;;;-1:-1:-1;21443:528:70;;;;;:::i;:::-;;:::i;:::-;;;;19382:25:117;;;19438:2;19423:18;;19416:34;;;;19355:18;21443:528:70;19208:248:117;38208:208:70;;;;;;;;;;-1:-1:-1;38208:208:70;;;;;:::i;:::-;;:::i;4533:28::-;;;;;;;;;;-1:-1:-1;4533:28:70;;;;-1:-1:-1;;;;;4533:28:70;;;4808:33;;;;;;;;;;-1:-1:-1;4808:33:70;;;;-1:-1:-1;;;;;4808:33:70;;;11405:147;;;;;;;;;;-1:-1:-1;11405:147:70;;;;;:::i;:::-;;:::i;1576:43::-;;;;;;;;;;;;1613:6;1576:43;;36659:104;;;;;;;;;;-1:-1:-1;36732:24:70;;;;;;;;;;;;-1:-1:-1;;;36732:24:70;;;;36659:104;;23656:142;;;;;;;;;;-1:-1:-1;23656:142:70;;;;;:::i;:::-;23755:10;23739:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;23739:35:70;;;;;;;;;;;;;:52;;-1:-1:-1;;23739:52:70;;;;;;;;;;23656:142;11027:244;;;;;;;;;;-1:-1:-1;11027:244:70;;;;;:::i;:::-;;:::i;3717:144:36:-;;;;;;;;;;-1:-1:-1;3717:144:36;;;;;:::i;:::-;;:::i;6079:79:70:-;;;;;;;;;;-1:-1:-1;6079:79:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;15449:281;;;;;;;;;;-1:-1:-1;15449:281:70;;;;;:::i;:::-;;:::i;39498:412::-;;;;;;;;;;-1:-1:-1;39498:412:70;;;;;:::i;:::-;;:::i;:::-;;;;21012:4:117;21000:17;;;20982:36;;21054:17;;;;21049:2;21034:18;;21027:45;21088:18;;;21081:34;;;;21146:2;21131:18;;21124:34;;;;21189:3;21174:19;;21167:35;21233:3;21218:19;;21211:35;21277:3;21262:19;;21255:35;20969:3;20954:19;39498:412:70;20675:621:117;32360:874:70;;;;;;;;;;-1:-1:-1;32360:874:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;29517:103::-;;;;;;;;;;-1:-1:-1;29517:103:70;;;;;:::i;:::-;;:::i;4953:19::-;;;;;;;;;;-1:-1:-1;4953:19:70;;;;-1:-1:-1;;;;;4953:19:70;;;4736:25;;;;;;;;;;;;;;;;11962:297;;;;;;;;;;-1:-1:-1;11962:297:70;;;;;:::i;:::-;;:::i;5869:48::-;;;;;;;;;;-1:-1:-1;5869:48:70;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5869:48:70;;;5768:49;;;;;;;;;;-1:-1:-1;5768:49:70;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5768:49:70;;;26661:631;;;;;;;;;;-1:-1:-1;26661:631:70;;;;;:::i;:::-;;:::i;3150:48::-;;;;;;;;;;-1:-1:-1;3150:48:70;;;;-1:-1:-1;;;3150:48:70;;;;;;41889:191;;;;;;;;;;-1:-1:-1;41889:191:70;;;;;:::i;:::-;;:::i;4984:233:36:-;;;;;;;;;;-1:-1:-1;4984:233:36;;;;;:::i;:::-;;:::i;40643:213:70:-;;;;;;;;;;-1:-1:-1;40643:213:70;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4218:40::-;;;;;;;;;;-1:-1:-1;4218:40:70;;;;-1:-1:-1;;;4218:40:70;;;;;;27838:1172;;;;;;;;;;-1:-1:-1;27838:1172:70;;;;;:::i;:::-;;:::i;12352:750::-;;;;;;;;;;-1:-1:-1;12352:750:70;;;;;:::i;:::-;;:::i;36209:235::-;;;;;;;;;;-1:-1:-1;36209:235:70;;;;;:::i;:::-;;:::i;40008:256::-;;;;;;;;;;-1:-1:-1;40008:256:70;;;;;:::i;:::-;;:::i;:::-;;;;25739:25:117;;;25795:2;25780:18;;25773:34;;;;25823:18;;;25816:34;25727:2;25712:18;40008:256:70;25537:319:117;13178:756:70;;;;;;;;;;-1:-1:-1;13178:756:70;;;;;:::i;:::-;;:::i;20718:540::-;;;;;;;;;;-1:-1:-1;20718:540:70;;;;;:::i;:::-;;:::i;37552:456::-;;;;;;;;;;-1:-1:-1;37552:456:70;;;;;:::i;:::-;;:::i;2826:40::-;;;;;;;;;;-1:-1:-1;2826:40:70;;;;-1:-1:-1;;;2826:40:70;;;;;;5969:48;;;;;;;;;;-1:-1:-1;5969:48:70;;;;;:::i;:::-;;;;;;;;;;;;;;30086:1533;;;;;;;;;;-1:-1:-1;30086:1533:70;;;;;:::i;:::-;;:::i;34905:947::-;;;;;;;;;;-1:-1:-1;34905:947:70;;;;;:::i;:::-;;:::i;18745:270::-;;;;;;;;;;-1:-1:-1;18745:270:70;;;;;:::i;:::-;;:::i;4433:35::-;;;;;;;;;;-1:-1:-1;4433:35:70;;;;-1:-1:-1;;;;;4433:35:70;;;3720:37;;;;;;;;;;-1:-1:-1;3720:37:70;;;;-1:-1:-1;;;3720:37:70;;;;;;3927:153:36;;;;;;;;;;-1:-1:-1;3927:153:36;;;;;:::i;:::-;;:::i;6707:64:70:-;;;;;;;;;;-1:-1:-1;6707:64:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;5139:61;;;;;;;;;;-1:-1:-1;5139:61:70;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5139:61:70;;;33801:946;;;;;;;;;;-1:-1:-1;33801:946:70;;;;;:::i;:::-;;:::i;:::-;;;;27525:25:117;;;27581:2;27566:18;;27559:34;;;;27609:18;;;27602:34;;;;27667:2;27652:18;;27645:34;27710:3;27695:19;;27688:35;27754:3;27739:19;;27732:35;27512:3;27497:19;33801:946:70;27238:535:117;27466:124:70;;;;;;;;;;-1:-1:-1;27466:124:70;;;;;:::i;:::-;;:::i;10376:262::-;;;;;;;;;;-1:-1:-1;10376:262:70;;;;;:::i;:::-;;:::i;14997:366::-;;;;;;;;;;-1:-1:-1;14997:366:70;;;;;:::i;:::-;;:::i;2179:47::-;;;;;;;;;;-1:-1:-1;2179:47:70;;;;;;;;;;;36796:195;36914:4;36937:47;36972:11;36937:34;:47::i;:::-;36930:54;36796:195;-1:-1:-1;;36796:195:70:o;3496:154:36:-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:36;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:36;3622:21;5963:127;10720:220:70;10782:12;:10;:12::i;:::-;10804:5;:22;;-1:-1:-1;;;;;;10804:22:70;-1:-1:-1;;;;;10804:22:70;;;;;;;;10848:16;;;-1:-1:-1;;;10848:16:70;;;;10877:4;;10804:22;10848:14;;:16;;;;;;;;;;;;;;10804:22;10848:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10840:42:70;;10836:98;;10905:18;;-1:-1:-1;;;10905:18:70;;;;;;;;;;;10836:98;10720:220;:::o;3322:113:36:-;3393:35;3402:2;3406:7;735:10:44;3393:8:36;:35::i;:::-;3322:113;;:::o;26303:115:70:-;26361:4;26384:27;26392:6;26400:10;26384:7;:27::i;38584:528::-;38686:40;38742:20;38765;38775:9;38765;:20::i;:::-;38742:43;;38799:12;38815:1;38799:17;38795:71;;-1:-1:-1;;38839:16:70;;;38853:1;38839:16;;;;;;;;;38832:23;-1:-1:-1;38584:528:70:o;38795:71::-;38875:9;38938:12;-1:-1:-1;;;;;38924:27:70;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38924:27:70;;38898:53;;38961:145;38972:12;38968:1;:16;38961:145;;;39031:33;39051:9;39062:1;39031:19;:33::i;:::-;39002:23;39026:1;39002:26;;;;;;;;:::i;:::-;;;;;;;;;;:62;39090:3;;38961:145;;;38732:380;;38584:528;;;:::o;9514:349::-;9631:12;;-1:-1:-1;;;;;9631:12:70;9623:35;:67;;;;-1:-1:-1;9670:5:70;;-1:-1:-1;;;;;9670:5:70;9662:28;9623:67;:103;;;;-1:-1:-1;9702:9:70;;-1:-1:-1;;;;;9702:9:70;9694:32;9623:103;9615:112;;;;;;9737:12;:43;;-1:-1:-1;;;;;9737:43:70;;;-1:-1:-1;;;;;;9737:43:70;;;;;;;9790:5;:22;;;;;;;;;;;;;;;9822:9;:34;;;;;;;;;;;9514:349::o;4142:578:36:-;-1:-1:-1;;;;;4236:16:36;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:36;;4305:1;4275:33;;;2000:51:117;1973:18;;4275:33:36;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:44;4561:7:36;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:36;:13;-1:-1:-1;;;;;4609:21:36;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:36;;-1:-1:-1;;;;;29033:32:117;;;4653:50:36;;;29015:51:117;29082:18;;;29075:34;;;29145:32;;29125:18;;;29118:60;28988:18;;4653:50:36;28813:371:117;4605:109:36;4222:498;4142:578;;;:::o;14028:823:70:-;14273:12;:10;:12::i;:::-;1613:6;14398:27;14366:29;14299:64;14333:30;14299:31;:64;:::i;:::-;:96;;;;:::i;:::-;:126;;;;:::i;:::-;:141;;;14295:201;;14463:22;;-1:-1:-1;;;14463:22:70;;;;;;;;;;;14295:201;14524:45;14538:31;1613:6;14524:45;:::i;:::-;14505:16;:64;;-1:-1:-1;;;;14579:57:70;-1:-1:-1;;;14505:64:70;;;;;-1:-1:-1;;;;14579:57:70;;-1:-1:-1;;;14579:57:70;;;;;;;;;;;-1:-1:-1;;;;14718:60:70;-1:-1:-1;;;14646:62:70;;;;;;;-1:-1:-1;;;;14718:60:70;;;;;-1:-1:-1;;;14718:60:70;;;;;;;;;;;-1:-1:-1;;;;14788:56:70;-1:-1:-1;;;14788:56:70;;;;;;;;14028:823::o;31874:275::-;31983:16;32001:21;32045:27;32064:7;32045:18;:27::i;:::-;32111:16;;32034:38;;-1:-1:-1;1613:6:70;;32099:28;;-1:-1:-1;;;32111:16:70;;32098:44;32111:16;32099:9;:28;:::i;:::-;32098:44;;;;:::i;:::-;32082:60;;31874:275;;;;;:::o;1736:255:39:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:39;;-1:-1:-1;;;;;6303:32:117;;1895:36:39;;;6285:51:117;6352:18;;;6345:34;;;6258:18;;1895:36:39;6111:274:117;1843:99:39;-1:-1:-1;;;;;;1958:19:39;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;40361:193:70:-;40452:30;;:::i;:::-;40514:12;;:33;;-1:-1:-1;;;40514:33:70;;;;;3659:25:117;;;-1:-1:-1;;;;;40514:12:70;;;;:25;;3632:18:117;;40514:33:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;39205:199::-;39357:12;;:40;;-1:-1:-1;;;39357:40:70;;39291:47;;-1:-1:-1;;;;;39357:12:70;;:30;;:40;;39388:8;;39357:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;39357:40:70;;;;;;;;;;;;:::i;16455:337::-;16618:7;16644:141;16664:10;16688;16712;16736:9;16759:16;16644:6;:141::i;:::-;16637:148;16455:337;-1:-1:-1;;;;;16455:337:70:o;4786:132:36:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;20113:190:70:-;20222:7;20248:48;20259:6;20267:10;20279:16;20248:10;:48::i;:::-;20241:55;20113:190;-1:-1:-1;;;20113:190:70:o;2236:226:39:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:39;;2401:1;2370:41;;;6285:51:117;6352:18;;;6345:34;;;6258:18;;2370:41:39;6111:274:117;2321:101:39;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;15923:177:70:-;16021:12;:10;:12::i;:::-;16043:29;;;;;;;;;:17;:29;;;;;:50;;-1:-1:-1;;16043:50:70;;;;;;;;;;15923:177::o;17109:898::-;17322:29;;;17292:14;17322:29;;;:17;:29;;;;;;;;17318:84;;;17374:17;;-1:-1:-1;;;17374:17:70;;;;;;;;;;;17318:84;-1:-1:-1;17420:10:70;;17472:27;;;17440:12;17472:27;;;:15;:27;;;;;;;17455:129;;-1:-1:-1;;;17455:129:70;;;;;39539:25:117;;;-1:-1:-1;;;;;39600:32:117;;;39580:18;;;39573:60;39669:32;;;39649:18;;;39642:60;17472:27:70;;;;17455:52;;39512:18:117;;17455:129:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17594:14;;;;:6;:14;;;;;;;;:27;;-1:-1:-1;;;;;;17594:27:70;;;17611:10;17594:27;;;;17631:5;:13;;;;;:20;;-1:-1:-1;;;;;17631:20:70;;;;;;;;17661:13;;:7;:13;;;;;:22;;;17440:144;-1:-1:-1;17693:17:70;17699:2;17601:6;17693:5;:17::i;:::-;17720:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;;17748:81:70;;;39539:25:117;;;-1:-1:-1;;;;;39600:32:117;;;39595:2;39580:18;;39573:60;39669:32;;39649:18;;;39642:60;17748:81:70;;;;;;;39527:2:117;17748:81:70;;;17839:68;17861:6;17881:16;17839:8;:68::i;:::-;-1:-1:-1;17960:25:70;;1613:6;;17941:44;;17940:60;17960:25;17941:16;:44;:::i;:::-;17940:60;;;;:::i;:::-;17917:20;;;;:12;:20;;;;;:83;-1:-1:-1;17930:6:70;17109:898;-1:-1:-1;;;;;17109:898:70:o;37145:236::-;37224:16;37263:23;;;:15;:23;;;;;;-1:-1:-1;;;;;37263:23:70;;37296:79;;37349:15;37357:6;37349:7;:15::i;37296:79::-;37145:236;;;:::o;18241:223::-;18351:20;18364:6;18351:12;:20::i;:::-;18381:27;;;;:19;:27;;;;;18439:18;;18409:15;18401:6;18409:7;:15::i;:::-;-1:-1:-1;;;;;18381:44:70;;;;;;;;;;;;;;;;;-1:-1:-1;18381:44:70;;;:55;;;;;;;;;;;;;:76;;-1:-1:-1;;18381:76:70;;;;;;;;;;;-1:-1:-1;;18241:223:70:o;24186:1968::-;24365:16;24373:7;24365;:16::i;:::-;-1:-1:-1;;;;;24345:36:70;:16;24353:7;24345;:16::i;:::-;-1:-1:-1;;;;;24345:36:70;;24341:98;;24404:24;;-1:-1:-1;;;24404:24:70;;;;;;;;;;;24341:98;24453:39;24463:16;24471:7;24463;:16::i;:::-;24481:10;24453:9;:39::i;:::-;24448:88;;24515:10;;-1:-1:-1;;;24515:10:70;;;;;;;;;;;24448:88;24545:15;24573:14;;;:5;:14;;;;;;;;;24626;;;;;;;;24694:18;;-1:-1:-1;;;24694:18:70;;;;-1:-1:-1;;;;;24573:14:70;;;;24626;;;;;;24694:16;;:18;;;;;24573:14;24694:18;;;;;24626:14;24694:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24655:58:70;24663:5;-1:-1:-1;;;;;24663:16:70;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24655:58:70;;;:118;;;;24755:5;-1:-1:-1;;;;;24755:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24717:56:70;24725:5;-1:-1:-1;;;;;24725:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24717:56:70;;;24655:118;24651:173;;;24796:17;;-1:-1:-1;;;24796:17:70;;;;;;;;;;;24651:173;24835:24;24861:14;24879:5;-1:-1:-1;;;;;24879:21:70;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24834:68;;;;24912:83;24955:5;24971:4;24978:16;24912:5;-1:-1:-1;;;;;24912:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24912:34:70;;:83;;:34;:83::i;:::-;25006:24;25032:14;25050:5;-1:-1:-1;;;;;25050:21:70;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25005:68;;;;25083:83;25126:5;25142:4;25149:16;25083:5;-1:-1:-1;;;;;25083:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:83;25211:28;25242:35;25261:16;25242;:35;:::i;:::-;25211:66;-1:-1:-1;25287:23:70;25211:66;25345:25;25364:6;25345:16;:25;:::i;:::-;25315;25334:6;25315:16;:25;:::i;:::-;25314:57;;;;:::i;:::-;25313:82;;;;:::i;:::-;25287:108;-1:-1:-1;25405:27:70;25474:23;25487:10;25474;:23;:::i;:::-;25435:63;;25449:20;25436:10;:33;;;;;;:::i;:::-;25435:63;;;;:::i;:::-;25405:93;-1:-1:-1;25508:27:70;25538:42;25405:93;25538:20;:42;:::i;:::-;25508:72;-1:-1:-1;25595:23:70;;25591:167;;25634:113;25690:5;25714:19;25634:5;-1:-1:-1;;;;;25634:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;25634:30:70;;:113;:30;:113::i;:::-;25767:58;;-1:-1:-1;;;25767:58:70;;;;;19382:25:117;;;19423:18;;;19416:34;;;-1:-1:-1;;;;;25767:20:70;;;;;19355:18:117;;25767:58:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25862:1;25840:19;:23;25836:167;;;25879:113;25935:5;25959:19;25879:5;-1:-1:-1;;;;;25879:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:113;26012:58;;-1:-1:-1;;;26012:58:70;;;;;19382:25:117;;;19423:18;;;19416:34;;;-1:-1:-1;;;;;26012:20:70;;;;;19355:18:117;;26012:58:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26086:61;26109:7;26130;26086:61;;;;;;19382:25:117;;;19438:2;19423:18;;19416:34;19370:2;19355:18;;19208:248;26086:61:70;;;;;;;;24331:1823;;;;;;;;;;24186:1968;;;;:::o;2184:118:36:-;2247:7;2273:22;2287:7;2273:13;:22::i;40954:689:70:-;41602:12;;:34;;-1:-1:-1;;;41602:34:70;;;;;3659:25:117;;;41046:23:70;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41602:12:70;;:26;;3632:18:117;;41602:34:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41595:41;;;;;;;;;;;;;;;;;;;;;;40954:689;;;;;;;;;;;;;:::o;35934:101::-;36006:12;;:22;;;-1:-1:-1;;;36006:22:70;;;;35974:13;;-1:-1:-1;;;;;36006:12:70;;:20;;:22;;;;;:12;;:22;;;;;;;:12;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36006:22:70;;;;;;;;;;;;:::i;:::-;35999:29;;35934:101;:::o;1919:208:36:-;1982:7;-1:-1:-1;;;;;2005:19:36;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:36;;2074:1;2047:30;;;2000:51:117;1973:18;;2047:30:36;1854:203:117;2001:87:36;-1:-1:-1;;;;;;2104:16:36;;;;;:9;:16;;;;;;;1919:208::o;11686:147:70:-;11773:12;:10;:12::i;:::-;-1:-1:-1;;;;;11795:17:70;;;;;;;:10;:17;;;;;:31;11686:147::o;29782:142::-;29859:7;29885:32;29898:6;29906:10;29885:12;:32::i;21443:528::-;21514:24;21540:23;21579:20;21592:6;21579:12;:20::i;:::-;21609:14;21636:13;;;:5;:13;;;;;;;21698:11;;-1:-1:-1;;;21698:11:70;;;;-1:-1:-1;;;;;21636:13:70;;;;;;21698:9;;:11;;;;;21636:13;;21698:11;;;;;;;;;21636:13;21698:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21660:49;;;;;;;;21719:17;21739:4;-1:-1:-1;;;;;21739:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21811;;;;:9;:17;;;;;;;;-1:-1:-1;;;;;21811:38:70;;;;;;;;;;21719:37;;-1:-1:-1;21766:84:70;;21719:37;;21766:23;:84::i;:::-;21901:1;21860:17;;;:9;:17;;;;;;;;-1:-1:-1;;;;;21860:38:70;;;;;;;;;:42;;;;21917:47;;25739:25:117;;;25780:18;;;25773:34;;;25823:18;;;25816:34;;;21917:47:70;;25727:2:117;25712:18;21917:47:70;;;;;;;21569:402;;21443:528;;;:::o;38208:208::-;38297:4;38339:10;-1:-1:-1;;;;;38320:29:70;:15;38328:6;38320:7;:15::i;:::-;-1:-1:-1;;;;;38320:29:70;;:89;;;-1:-1:-1;38353:27:70;;;;:19;:27;;;;;;38381:15;38373:6;38381:7;:15::i;:::-;-1:-1:-1;;;;;38353:44:70;;;;;;;;;;;;;;;;;-1:-1:-1;38353:44:70;;;:56;;;;;;;;;;;;38313:96;;38208:208;;;;:::o;11405:147::-;11492:12;:10;:12::i;:::-;-1:-1:-1;;;;;11514:17:70;;;;;;;:10;:17;;;;;:31;11405:147::o;11027:244::-;11097:12;:10;:12::i;:::-;11119:9;:34;;-1:-1:-1;;;;;;11119:34:70;-1:-1:-1;;;;;11119:34:70;;;;;;;;11175:20;;;-1:-1:-1;;;11175:20:70;;;;11208:4;;11119:34;11175:18;;:20;;;;;;;;;;;;;;11119:34;11175:20;;;;;;;;;;;;;;3717:144:36;3802:52;735:10:44;3835:8:36;3845;3802:18;:52::i;15449:281:70:-;15531:12;:10;:12::i;:::-;15553:17;15590:16;-1:-1:-1;;;;;15573:45:70;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15630:27;;;;;;:15;:27;;;;;;;;:46;;-1:-1:-1;;;;;;15630:46:70;-1:-1:-1;;;;;15630:46:70;;;;;;;;;;;15686:17;:29;;;;;;:37;;-1:-1:-1;;15686:37:70;;;-1:-1:-1;15449:281:70:o;39498:412::-;39873:12;;:30;;-1:-1:-1;;;39873:30:70;;;;;3659:25:117;;;39586:19:70;;;;;;;;;;;;;;-1:-1:-1;;;;;39873:12:70;;:22;;3632:18:117;;39873:30:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39866:37;;;;-1:-1:-1;39866:37:70;;-1:-1:-1;39866:37:70;;-1:-1:-1;39866:37:70;-1:-1:-1;39866:37:70;-1:-1:-1;39866:37:70;;-1:-1:-1;39498:412:70;-1:-1:-1;;39498:412:70:o;32360:874::-;32583:16;;;32597:1;32583:16;;;;;;;;;32503:26;;;;32583:16;;;;;;;;;-1:-1:-1;;32619:16:70;;;32633:1;32619:16;;;;;;;;;32571:28;;-1:-1:-1;32633:1:70;-1:-1:-1;32619:16:70;;;;;;;;;;-1:-1:-1;32619:16:70;32609:26;;32660:15;32668:6;32660:7;:15::i;:::-;32645:9;32655:1;32645:12;;;;;;;;:::i;:::-;;;;;;:30;-1:-1:-1;;;;;32645:30:70;;;-1:-1:-1;;;;;32645:30:70;;;;;32714:26;32733:6;32714:18;:26::i;:::-;32699:9;32709:1;32699:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32699:41:70;;;:12;;;;;;;;;:41;32794:5;;;32785:55;;32835:5;;-1:-1:-1;;;;;32835:5:70;32785:55;;;32826:5;;-1:-1:-1;;;;;32826:5:70;32785:55;32770:9;32780:1;32770:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32770:70:70;;;:12;;;;;;;;;:70;32876:5;;32861:12;;32876:5;;;32861:9;;32871:1;;32861:12;;;;;;:::i;:::-;-1:-1:-1;;;;;32861:20:70;;;:12;;;;;;;;;;;:20;32966:23;;1613:6;;;;32957:32;;-1:-1:-1;;;32966:23:70;;32900:33;32966:23;32957:6;:32;:::i;:::-;32956:48;;;;:::i;:::-;32943:7;32951:1;32943:10;;;;;;;;:::i;:::-;;;;;;;;;;:61;33037:29;;33070:11;;33028:38;;-1:-1:-1;;;33037:29:70;;;;33028:6;:38;:::i;:::-;33027:54;;;;:::i;:::-;33014:7;33022:1;33014:10;;;;;;;;:::i;:::-;;;;;;;;;;:67;33114:28;;33146:11;;33105:37;;-1:-1:-1;;;33114:28:70;;;;33105:6;:37;:::i;:::-;33104:53;;;;:::i;:::-;33091:7;33099:1;33091:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;33216:7;33224:1;33216:10;;;;;;;;:::i;:::-;;;;;;;33203:7;33211:1;33203:10;;;;;;;;:::i;:::-;;;;;;;33190:7;33198:1;33190:10;;;;;;;;:::i;:::-;;;;;;;:23;;;;:::i;:::-;:36;;;;:::i;:::-;33180:47;;:6;:47;:::i;:::-;33167:7;33175:1;33167:10;;;;;;;;:::i;:::-;;;;;;:60;;;;;32561:673;32360:874;;;;;:::o;29517:103::-;29580:33;29590:10;29602:2;29606:6;29580:9;:33::i;11962:297::-;12063:12;:10;:12::i;:::-;1613:6;12089:41;;;;12085:104;;12153:25;;-1:-1:-1;;;12153:25:70;;;;;;;;;;;12085:104;12198:25;:54;;-1:-1:-1;;12198:54:70;;;;;;;;;;;;11962:297::o;26661:631::-;26736:14;26762:16;26781:9;26800:14;26827:13;;;:5;:13;;;;;;26762:28;;-1:-1:-1;;;;;;26827:13:70;26851:19;26827:13;26851;:19::i;:::-;26884:4;-1:-1:-1;;;;;26884:12:70;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26884:14:70;;;;;;;;-1:-1:-1;;26884:14:70;;;;;;;;;;;;:::i;:::-;;;26880:137;;27001:5;26989:17;;26880:137;;;26949:8;-1:-1:-1;26880:137:70;27030:9;27026:260;;;27055:19;27102:11;27089:9;27078:20;;:8;:20;:::i;:::-;27077:36;;;;:::i;:::-;27055:58;;27169:37;27177:6;27185:11;27198:7;27169;:37::i;:::-;27225:50;;;44541:25:117;;;27239:15:70;44597:2:117;44582:18;;44575:45;-1:-1:-1;;;;;44656:32:117;;44636:18;;;44629:60;44732:14;;44725:22;44720:2;44705:18;;44698:50;27225::70;;;;;;;44528:3:117;27225:50:70;;;27041:245;27026:260;26752:540;;26661:631;;;;:::o;41889:191::-;41984:12;:10;:12::i;:::-;42007;42025:6;-1:-1:-1;;;;;42025:11:70;42044:5;42051:4;42025:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;41889:191:70:o;4984:233:36:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:44;5186:4:36;5192:2;5196:7;5205:4;5138:33;:72::i;40643:213:70:-;40812:12;;:37;;-1:-1:-1;;;40812:37:70;;40748:32;;-1:-1:-1;;;;;40812:12:70;;:27;;:37;;40840:8;;40812:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40812:37:70;;;;;;;;;;;;:::i;27838:1172::-;27925:14;27951:16;27970:9;27989:14;28016:13;;;:5;:13;;;;;;27951:28;;-1:-1:-1;;;;;;28016:13:70;28040:19;28016:13;28040;:19::i;:::-;28073:30;;;28069:679;;28123:4;-1:-1:-1;;;;;28123:13:70;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28123:15:70;;;;;;;;-1:-1:-1;;28123:15:70;;;;;;;;;;;;:::i;:::-;;;28119:90;28069:679;28119:90;;;28169:4;28157:16;;28069:679;;;-1:-1:-1;;28229:31:70;;;;28225:523;;28280:4;-1:-1:-1;;;;;28280:14:70;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28280:16:70;;;;;;;;-1:-1:-1;;28280:16:70;;;;;;;;;;;;:::i;28225:523::-;-1:-1:-1;;28387:32:70;;;;28383:365;;28439:4;-1:-1:-1;;;;;28439:15:70;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28439:17:70;;;;;;;;-1:-1:-1;;28439:17:70;;;;;;;;;;;;:::i;28383:365::-;-1:-1:-1;;28547:33:70;;;;28543:205;;28600:4;-1:-1:-1;;;;;28600:16:70;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28600:18:70;;;;;;;;-1:-1:-1;;28600:18:70;;;;;;;;;;;;:::i;28543:205::-;28726:11;;-1:-1:-1;;;28726:11:70;;;;;;;;;;;28543:205;28761:9;28757:247;;;28786:19;28833:11;28820:9;28809:20;;:8;:20;:::i;:::-;28808:36;;;;:::i;:::-;28786:58;;28900:37;28908:6;28916:11;28929:7;28900;:37::i;:::-;28956;;;44541:25:117;;;44614:4;44602:17;;44597:2;44582:18;;44575:45;-1:-1:-1;;;;;44656:32:117;;44636:18;;;44629:60;44732:14;;44725:22;44720:2;44705:18;;44698:50;28956:37:70;;;;;;;44528:3:117;28956:37:70;;;28772:232;28757:247;27941:1069;;27838:1172;;;;;:::o;12352:750::-;12626:12;:10;:12::i;:::-;1613:6;12652:54;;;;12648:118;;12729:26;;-1:-1:-1;;;12729:26:70;;;;;;;;;;;12648:118;12775:38;:80;;-1:-1:-1;;12865:70:70;12775:80;;;;;;-1:-1:-1;;12865:70:70;;;;;;;;;;;;;;-1:-1:-1;;13029:66:70;-1:-1:-1;;;12945:74:70;;;;;;;-1:-1:-1;;13029:66:70;;;;;-1:-1:-1;;;13029:66:70;;;;;;;;;;;12352:750::o;36209:235::-;36338:17;36371:21;36385:6;36371:13;:21::i;:::-;-1:-1:-1;36408:12:70;;:29;;-1:-1:-1;;;36408:29:70;;;;;3659:25:117;;;-1:-1:-1;;;;;36408:12:70;;;;:21;;3632:18:117;;36408:29:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36408:29:70;;;;;;;;;;;;:::i;40008:256::-;40224:12;;:33;;-1:-1:-1;;;40224:33:70;;;;;3659:25:117;;;40091:23:70;;;;;;-1:-1:-1;;;;;40224:12:70;;:25;;3632:18:117;;40224:33:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;40217:40;;;;;;40008:256;;;;;:::o;13178:756::-;13422:12;:10;:12::i;:::-;1613:6;13540:35;13508:29;13448:57;13478:27;13448;:57;:::i;:::-;:89;;;;:::i;:::-;:127;;;;:::i;:::-;:142;;;13444:200;;13613:20;;-1:-1:-1;;;13613:20:70;;;;;;;;;;;13444:200;13653:26;:56;;-1:-1:-1;;;;13719:56:70;-1:-1:-1;;;13653:56:70;;;;;-1:-1:-1;;;;13719:56:70;;-1:-1:-1;;;13719:56:70;;;;;;;;;;;-1:-1:-1;;;;13855:72:70;-1:-1:-1;;;13785:60:70;;;;;;;-1:-1:-1;;;;13855:72:70;;;;;-1:-1:-1;;;13855:72:70;;;;;;;;;;;13178:756::o;20718:540::-;20847:17;20876:20;20889:6;20876:12;:20::i;:::-;20906:14;20933:13;;;:5;:13;;;;;;;;;20977:17;;-1:-1:-1;;;20977:17:70;;;;-1:-1:-1;;;;;20933:13:70;;;;20906:14;20933:13;;20977:15;;:17;;;;;20933:13;20977:17;;;;;20933:13;20977:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21016:35;;-1:-1:-1;;;21016:35:70;;-1:-1:-1;;;;;6303:32:117;;;21016:35:70;;;6285:51:117;6352:18;;;6345:34;;;20957:37:70;;-1:-1:-1;21016:13:70;;;;;;6258:18:117;;21016:35:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21061:17;;;;:9;:17;;;;;;;;-1:-1:-1;;;;;21061:38:70;;;;;;;;;:51;;21004:47;;-1:-1:-1;21004:47:70;;21061:38;;:17;:51;;21004:47;;21061:51;:::i;:::-;;;;-1:-1:-1;21122:55:70;;-1:-1:-1;21154:10:70;21167:9;21122:23;:55::i;:::-;21192:59;;;47079:25:117;;;-1:-1:-1;;;;;47140:32:117;;;47135:2;47120:18;;47113:60;47209:32;;47189:18;;;47182:60;47273:2;47258:18;;47251:34;;;21192:59:70;;;;;;;47066:3:117;21192:59:70;;;20866:392;;20718:540;;;;;:::o;37552:456::-;37635:4;37677:1;37655:19;37665:8;37655:9;:19::i;:::-;:23;37651:351;;;37716:9;;-1:-1:-1;;;;;37716:9:70;;;37698:28;;;;37694:255;;-1:-1:-1;;;;;;37754:32:70;;;;;;:22;:32;;;;;;;;37753:33;37746:40;;37694:255;37889:6;-1:-1:-1;;;;;37877:18:70;:8;-1:-1:-1;;;;;37877:18:70;;:55;;;-1:-1:-1;;;;;;37899:25:70;;;;;;;:15;:25;;;;;;;;:33;;;;;;;;;;;;37877:55;37869:64;;;;37651:351;-1:-1:-1;37986:5:70;37979:12;;30086:1533;30183:24;30233:25;30306:22;30342:20;30376:18;30451:23;30553:30;30576:6;30553:22;:30::i;:::-;30593:14;30620:13;;;:5;:13;;;;;;;;;30664:20;;-1:-1:-1;;;30664:20:70;;;;30219:364;;-1:-1:-1;30219:364:70;;-1:-1:-1;30219:364:70;;-1:-1:-1;30219:364:70;;-1:-1:-1;30219:364:70;;-1:-1:-1;;;;;;30620:13:70;;;;;;30664:18;;:20;;;;;-1:-1:-1;30620:13:70;;30664:20;;;;;;30620:13;30664:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30644:40;-1:-1:-1;30694:71:70;-1:-1:-1;;;;;30694:27:70;;30722:10;30742:4;30749:15;30694:27;:71::i;:::-;30784:26;30813;30832:6;30813:18;:26::i;:::-;30784:55;;30875:2;30849:15;:23;30865:6;30849:23;;;;;;;;;;;;:28;;;;;-1:-1:-1;;;;;30849:28:70;;;;;-1:-1:-1;;;;;30849:28:70;;;;;;30910:15;30887:12;:20;30900:6;30887:20;;;;;;;;;;;:38;;;;30960:1;30940:17;:21;30936:165;;;30977:62;-1:-1:-1;;;;;30977:23:70;;31001:18;31021:17;30977:23;:62::i;:::-;31053:37;31073:17;31053:37;;:::i;:::-;;;30936:165;31114:18;;31110:153;;31148:56;31172:15;31180:6;31172:7;:15::i;:::-;-1:-1:-1;;;;;31148:23:70;;;31189:14;31148:23;:56::i;:::-;31218:34;31238:14;31218:34;;:::i;:::-;;;31110:153;31276:16;;31272:146;;31340:5;;31308:53;;-1:-1:-1;;;;;31308:23:70;;;;31340:5;31348:12;31308:23;:53::i;:::-;31375:32;31395:12;31375:32;;:::i;:::-;;;31272:146;31431:14;;31427:131;;31485:5;;31461:42;;-1:-1:-1;;;;;31461:23:70;;;;31485:5;31492:10;31461:23;:42::i;:::-;31517:30;31537:10;31517:30;;:::i;:::-;;;31427:131;31572:40;;;47498:25:117;;;-1:-1:-1;;;;;47559:32:117;;47554:2;47539:18;;47532:60;47608:18;;;47601:34;;;31572:40:70;;47486:2:117;47471:18;31572:40:70;;;;;;;30209:1410;;;;;;;;30086:1533;;;;:::o;34905:947::-;35154:16;;;35168:1;35154:16;;;;;;;;;35076:23;;;;35154:16;;;;;;;;;-1:-1:-1;;35194:16:70;;;35208:1;35194:16;;;;;;;;;35145:25;;-1:-1:-1;35208:1:70;-1:-1:-1;35194:16:70;;;;;;;;;;-1:-1:-1;;35180:30:70;-1:-1:-1;1613:6:70;35274:15;35282:6;35274:7;:15::i;:::-;35262:6;35269:1;35262:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;35262:27:70;;;:9;;;;;;;;;:27;35332:5;;;35324:53;;35372:5;;-1:-1:-1;;;;;35372:5:70;35324:53;;;35363:5;;-1:-1:-1;;;;;35363:5:70;35324:53;35312:6;35319:1;35312:9;;;;;;;;:::i;:::-;;;;;;:65;-1:-1:-1;;;;;35312:65:70;;;-1:-1:-1;;;;;35312:65:70;;;;;35408:26;35427:6;35408:18;:26::i;:::-;35396:6;35403:1;35396:9;;;;;;;;:::i;:::-;;;;;;:38;-1:-1:-1;;;;;35396:38:70;;;-1:-1:-1;;;;;35396:38:70;;;;;35476:7;35464:6;35471:1;35464:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;35464:19:70;;;:9;;;;;;;;;;;:19;35537:28;;35522:58;;;;;35523:42;;-1:-1:-1;;;35537:28:70;;;;35523:11;:42;:::i;:::-;35522:58;;;;:::i;:::-;35505:11;35517:1;35505:14;;;;;;;;:::i;:::-;;;;;;;;;;:75;35622:26;;35607:56;;;;;35608:40;;-1:-1:-1;;;35622:26:70;;;;35608:11;:40;:::i;:::-;35607:56;;;;:::i;:::-;35590:11;35602:1;35590:14;;;;;;;;:::i;:::-;;;;;;;;;;:73;35705:34;;35690:64;;;;;35691:48;;-1:-1:-1;;;35705:34:70;;;;35691:11;:48;:::i;:::-;35690:64;;;;:::i;:::-;35673:11;35685:1;35673:14;;;;;;;;:::i;:::-;;;;;;:81;;;;;35830:11;35842:1;35830:14;;;;;;;;:::i;:::-;;;;;;;35813:11;35825:1;35813:14;;;;;;;;:::i;:::-;;;;;;;35796:11;35808:1;35796:14;;;;;;;;:::i;:::-;;;;;;;:31;;;;:::i;:::-;:48;;;;:::i;:::-;35781:64;;:11;:64;:::i;:::-;35764:11;35776:1;35764:14;;;;;;;;:::i;:::-;;;;;;:81;;;;;35135:717;34905:947;;;;;;:::o;18745:270::-;18853:7;18877:33;18891:6;18899:10;18877:13;:33::i;:::-;18872:86;;18933:14;;-1:-1:-1;;;18933:14:70;;;;;;;;;;;18872:86;18974:34;18983:6;18991:16;18974:8;:34::i;3927:153:36:-;-1:-1:-1;;;;;4038:25:36;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;33801:946:70:-;33921:25;34171:20;;;:12;:20;;;;;;34282:38;;33921:25;;;;;;;;;;34171:20;1613:6;;;;34266:54;;34282:38;;;34201:34;34282:38;34171:20;34266:54;:::i;:::-;34265:71;;;;:::i;:::-;34380:35;;34245:91;;-1:-1:-1;34419:12:70;;34364:51;;-1:-1:-1;;;34380:35:70;;;;34364:13;:51;:::i;:::-;34363:68;;;;:::i;:::-;34473:33;;34346:85;;-1:-1:-1;34510:12:70;;34457:49;;34473:33;;;;;34457:13;:49;:::i;:::-;34456:66;;;;:::i;:::-;34562:31;;34441:81;;-1:-1:-1;34597:12:70;;34546:47;;-1:-1:-1;;;34562:31:70;;;;34546:13;:47;:::i;:::-;34545:64;;;;:::i;:::-;34532:77;;34637:13;34619:31;;34730:10;34715:12;34698:14;34678:17;:34;;;;:::i;:::-;:49;;;;:::i;:::-;:62;;;;:::i;:::-;34660:80;;34137:610;;33801:946;;;;;;;:::o;27466:124::-;27527:4;27550:33;27560:6;27568:2;27572:10;27550:9;:33::i;10376:262::-;10452:12;:10;:12::i;:::-;10474;:43;;-1:-1:-1;;;;;;10474:43:70;-1:-1:-1;;;;;10474:43:70;;;;;;;;10539:23;;;-1:-1:-1;;;10539:23:70;;;;10575:4;;10474:43;10539:21;;:23;;;;;;;;;;;;;;10474:43;10539:23;;;;;;;;;;;;;;14997:366;15105:5;;-1:-1:-1;;;;;15105:5:70;15090:10;15082:28;15078:279;;15126:12;:23;;-1:-1:-1;;;;;15126:23:70;;-1:-1:-1;;;;;;15126:23:70;;;;;;10720:220;:::o;15078:279::-;15193:12;;-1:-1:-1;;;;;15193:12:70;15178:10;15170:35;15166:191;;15229:12;;;15221:5;:20;;-1:-1:-1;;;;;;15221:20:70;;;-1:-1:-1;;;;;15229:12:70;;15221:20;;;;15255:34;;;10720:220;:::o;15166:191::-;15327:19;;-1:-1:-1;;;15327:19:70;;;;;;;;;;;1435:222:39;1537:4;-1:-1:-1;;;;;;1560:50:39;;-1:-1:-1;;;1560:50:39;;:90;;;1614:36;1638:11;1614:23;:36::i;16212:241:36:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:36;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:36;;;;;3659:25:117;;;3632:18;;16383:31:36;3513:177:117;9917:118:70;9980:5;;-1:-1:-1;;;;;9980:5:70;9966:10;:19;9962:67;;10008:10;;-1:-1:-1;;;10008:10:70;;;;;;;;;;;9962:67;9917:118::o;14492:120:36:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;2518:625:39:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:39;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:39;:13;-1:-1:-1;;;;;2807:19:39;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:39;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:39;:13;-1:-1:-1;;;;;3020:19:39;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:39:o;9978:327:36:-;-1:-1:-1;;;;;10045:16:36;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:36;;10114:1;10084:33;;;2000:51:117;1973:18;;10084:33:36;1854:203:117;10041:87:36;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:36;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:36;;10285:1;10257:31;;;2000:51:117;1973:18;;10257:31:36;1854:203:117;19103:891:70;19203:23;19265:13;;;:5;:13;;;;;;;;;19309:17;;-1:-1:-1;;;19309:17:70;;;;-1:-1:-1;;;;;19265:13:70;;;;19203:23;;19265:13;;19309:15;;:17;;;;;19265:13;;19309:17;;;;;;19265:13;19309:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19289:37;;19336:55;19361:10;19374:16;19336;:55::i;:::-;19401;19426:10;19439:16;19401;:55::i;:::-;19466:118;-1:-1:-1;;;;;19466:27:70;;19507:10;19539:4;19558:16;19466:27;:118::i;:::-;19594:56;-1:-1:-1;;;;;19594:23:70;;19626:4;19633:16;19594:23;:56::i;:::-;19678:30;;-1:-1:-1;;;19678:30:70;;;;;3659:25:117;;;-1:-1:-1;;;;;19678:12:70;;;;;3632:18:117;;19678:30:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19718:17;;;;:9;:17;;;;;;;;-1:-1:-1;;;;;19718:38:70;;;;;;;;;:57;;19660:48;;-1:-1:-1;19660:48:70;;19718:38;;:17;:57;;19660:48;;19718:57;:::i;:::-;;;;-1:-1:-1;19785:61:70;;-1:-1:-1;19817:10:70;19830:15;19785:23;:61::i;:::-;19861:126;;;47079:25:117;;;-1:-1:-1;;;;;47140:32:117;;;47135:2;47120:18;;47113:60;47209:32;;47189:18;;;47182:60;47273:2;47258:18;;47251:34;;;19861:126:70;;;;;;;47066:3:117;19861:126:70;;;19228:766;;19103:891;;;;:::o;10100:146::-;10179:15;10187:6;10179:7;:15::i;:::-;-1:-1:-1;;;;;10165:29:70;:10;-1:-1:-1;;;;;10165:29:70;;10161:79;;10217:12;;-1:-1:-1;;;10217:12:70;;;;;;;;;;;1618:188:35;1745:53;;-1:-1:-1;;;;;47866:32:117;;;1745:53:35;;;47848:51:117;47935:32;;;47915:18;;;47908:60;47984:18;;;47977:34;;;1718:81:35;;1738:5;;1760:18;;;;;47821::117;;1745:53:35;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:35;;;;;;;;;;;1718:19;:81::i;4400:380::-;4515:47;;;-1:-1:-1;;;;;6303:32:117;;4515:47:35;;;6285:51:117;6352:18;;;;6345:34;;;4515:47:35;;;;;;;;;;6258:18:117;;;;4515:47:35;;;;;;;;-1:-1:-1;;;;;4515:47:35;-1:-1:-1;;;4515:47:35;;;4578:44;4530:13;4515:47;4578:23;:44::i;:::-;4573:201;;4665:43;;-1:-1:-1;;;;;6303:32:117;;;4665:43:35;;;6285:51:117;4705:1:35;6352:18:117;;;6345:34;4638:71:35;;4658:5;;4680:13;;;;;6258:18:117;;4665:43:35;6111:274:117;4638:71:35;4723:40;4743:5;4750:12;4723:19;:40::i;23287:280:70:-;-1:-1:-1;;;;;23386:26:70;;;;;;:14;:26;;;;;;:43;-1:-1:-1;23382:179:70;;;-1:-1:-1;;;;;23445:26:70;;;;;;:14;:26;;;;;:44;;23475:14;;23445:26;:44;;23475:14;;23445:44;:::i;:::-;;;;-1:-1:-1;23382:179:70;;-1:-1:-1;23382:179:70;;-1:-1:-1;;;;;;23520:26:70;23549:1;23520:26;;;:14;:26;;;;;:30;23287:280::o;15665:312:36:-;-1:-1:-1;;;;;15772:22:36;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:36;;-1:-1:-1;;;;;2018:32:117;;15817:31:36;;;2000:51:117;1973:18;;15817:31:36;1854:203:117;15768:91:36;-1:-1:-1;;;;;15868:25:36;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:36;;;;;;;;;;15929:41;;750::117;;;15929::36;;723:18:117;15929:41:36;;;;;;;15665:312;;;:::o;12061:460::-;-1:-1:-1;;;;;12146:16:36;;12142:87;;12185:33;;-1:-1:-1;;;12185:33:36;;12215:1;12185:33;;;2000:51:117;1973:18;;12185:33:36;1854:203:117;12142:87:36;12238:21;12262:32;12270:2;12274:7;12291:1;12262:7;:32::i;:::-;12238:56;-1:-1:-1;;;;;;12308:27:36;;12304:211;;12358:31;;-1:-1:-1;;;12358:31:36;;;;;3659:25:117;;;3632:18;;12358:31:36;3513:177:117;12304:211:36;12427:4;-1:-1:-1;;;;;12410:21:36;:13;-1:-1:-1;;;;;12410:21:36;;12406:109;;12454:50;;-1:-1:-1;;;12454:50:36;;-1:-1:-1;;;;;29033:32:117;;;12454:50:36;;;29015:51:117;29082:18;;;29075:34;;;29145:32;;29125:18;;;29118:60;28988:18;;12454:50:36;28813:371:117;22662:145:70;22728:4;-1:-1:-1;;;;;22728:21:70;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22755:1;22728:28;22724:77;;22779:11;;-1:-1:-1;;;22779:11:70;;;;;;;;;;;29052:302;29143:23;29168:28;29200:91;29229:6;29249:11;29274:7;29200:15;:91::i;:::-;29305:5;;:31;;-1:-1:-1;;;29305:31:70;;29142:149;;-1:-1:-1;29142:149:70;;-1:-1:-1;;;;;;29305:5:70;;:10;;:31;;29142:149;;;;29305:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29305:31:70;;;;;;;;-1:-1:-1;;29305:31:70;;;;;;;;;;;;:::i;:::-;;;29301:47;;;;;;29132:222;;29052:302;;;:::o;985:924:42:-;-1:-1:-1;;;;;1165:14:42;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:42;;-1:-1:-1;;;;;1203:36:42;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:42;;;;;;;;-1:-1:-1;;1203:67:42;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:42;;-1:-1:-1;;;;;2018:32:117;;1664:39:42;;;2000:51:117;1973:18;;1664:39:42;1854:203:117;1556:323:42;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:42;;-1:-1:-1;;;1317:51:42;1313:182;;1437:39;;-1:-1:-1;;;1437:39:42;;-1:-1:-1;;;;;2018:32:117;;1437:39:42;;;2000:51:117;1973:18;;1437:39:42;1854:203:117;1219:160:35;1328:43;;-1:-1:-1;;;;;6303:32:117;;;1328:43:35;;;6285:51:117;6352:18;;;6345:34;;;1301:71:35;;1321:5;;1343:14;;;;;6258:18:117;;1328:43:35;6111:274:117;1560:300:36;1662:4;-1:-1:-1;;;;;;1697:40:36;;-1:-1:-1;;;1697:40:36;;:104;;-1:-1:-1;;;;;;;1753:48:36;;-1:-1:-1;;;1753:48:36;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:48;;;1817:36:36;763:146:48;14794:662:36;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:36;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:36;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:36;:5;-1:-1:-1;;;;;15189:13:36;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:36;;-1:-1:-1;;;;;2018:32:117;;15263:27:36;;;2000:51:117;1973:18;;15263:27:36;1854:203:117;15163:142:36;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:36;15366:5;-1:-1:-1;;;;;15357:28:36;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:36;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:36;-1:-1:-1;;;;;15420:29:36;;;;;;;;;;14794:662::o;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:36;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:36;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:36;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:36;;;9180:256;-1:-1:-1;;;;;9450:16:36;;;9446:107;;-1:-1:-1;;;;;9510:13:36;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:36;-1:-1:-1;;;;;9563:21:36;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:36:o;4624:1055:39:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;5058:18:39;;;;:12;:18;;;;;;4886:40;;-1:-1:-1;4957:26:39;5180:28;;;5176:325;;5224:19;5246:35;;;;;;;;;;;;5296:31;;;;;;:45;;;5413:30;;:17;:30;;;;;:43;;;5176:325;5594:26;;;;:17;:26;;;;;;;;5587:33;;;5637:35;;;;-1:-1:-1;5637:35:39;;5630:42;-1:-1:-1;4624:1055:39:o;5967:1061::-;6241:10;:17;6216:22;;6241:21;;6261:1;;6241:21;:::i;:::-;6272:18;6293:24;;;:15;:24;;;;;;6661:10;:26;;6216:46;;-1:-1:-1;6293:24:39;;6216:46;;6661:26;;;;;;:::i;:::-;;;;;;;;;6639:48;;6723:11;6698:10;6709;6698:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6802:28;;;:15;:28;;;;;;;:41;;;6971:24;;;;;6964:31;7005:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6038:990;;;5967:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:39;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:39:o;22012:198:70:-;-1:-1:-1;;;;;22124:22:70;;;;;;:10;:22;;;;;;22108:38;;22104:100;;;22169:24;;-1:-1:-1;;;22169:24:70;;;;;;;;;;;22356:225;-1:-1:-1;;;;;22452:22:70;;;;;;:10;:22;;;;;;:27;;;;:69;;-1:-1:-1;;;;;;22499:22:70;;;;;;:10;:22;;;;;;22483:38;;22452:69;22448:127;;;22544:20;;-1:-1:-1;;;22544:20:70;;;;;;;;;;;22974:146;-1:-1:-1;;;;;23069:26:70;;;;;;:14;:26;;;;;:44;;23099:14;;23069:26;:44;;23099:14;;23069:44;:::i;:::-;;;;-1:-1:-1;;;;22974:146:70:o;7686:720:35:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;-1:-1:-1;;8232:1:35;8226:8;8182:16;;-1:-1:-1;8258:15:35;;:68;;8310:11;8325:1;8310:16;;8258:68;;;-1:-1:-1;;;;;8276:26:35;;;:31;8258:68;8254:146;;;8349:40;;-1:-1:-1;;;8349:40:35;;-1:-1:-1;;;;;2018:32:117;;8349:40:35;;;2000:51:117;1973:18;;8349:40:35;1854:203:117;8908:480:35;8991:4;9007:12;9029:18;9057:19;9191:4;9188:1;9181:4;9175:11;9168:4;9162;9158:15;9155:1;9148:5;9141;9136:60;9125:71;;9223:16;9209:30;;9273:1;9267:8;9252:23;;9301:7;:80;;;;-1:-1:-1;9313:15:35;;:67;;9364:11;9379:1;9364:16;9313:67;;;9360:1;9339:5;-1:-1:-1;;;;;9331:26:35;;:30;9313:67;9294:87;8908:480;-1:-1:-1;;;;;;8908:480:35:o;7105:368:36:-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:36;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:36;;;;;3659:25:117;;;3632:18;;7321:31:36;3513:177:117;7271:186:36;7398:44;;-1:-1:-1;;;7398:44:36;;-1:-1:-1;;;;;6303:32:117;;7398:44:36;;;6285:51:117;6352:18;;;6345:34;;;6258:18;;7398:44:36;6111:274:117;6401:272:36;6504:4;-1:-1:-1;;;;;6539:21:36;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:36;:5;-1:-1:-1;;;;;6577:16:36;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:36;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:36;;;6633:32;;;;6520:146;-1:-1:-1;6401:272:36:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;224:131:117:-;-1:-1:-1;;;;;;298:32:117;;288:43;;278:71;;345:1;342;335:12;360:245;418:6;471:2;459:9;450:7;446:23;442:32;439:52;;;487:1;484;477:12;439:52;526:9;513:23;545:30;569:5;545:30;:::i;995:289::-;1037:3;1075:5;1069:12;1102:6;1097:3;1090:19;1158:6;1151:4;1144:5;1140:16;1133:4;1128:3;1124:14;1118:47;1210:1;1203:4;1194:6;1189:3;1185:16;1181:27;1174:38;1273:4;1266:2;1262:7;1257:2;1249:6;1245:15;1241:29;1236:3;1232:39;1228:50;1221:57;;;995:289;;;;:::o;1289:220::-;1438:2;1427:9;1420:21;1401:4;1458:45;1499:2;1488:9;1484:18;1476:6;1458:45;:::i;1514:226::-;1573:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:52;;;1642:1;1639;1632:12;1594:52;-1:-1:-1;1687:23:117;;1514:226;-1:-1:-1;1514:226:117:o;2062:131::-;-1:-1:-1;;;;;2137:31:117;;2127:42;;2117:70;;2183:1;2180;2173:12;2198:247;2257:6;2310:2;2298:9;2289:7;2285:23;2281:32;2278:52;;;2326:1;2323;2316:12;2278:52;2365:9;2352:23;2384:31;2409:5;2384:31;:::i;2450:367::-;2518:6;2526;2579:2;2567:9;2558:7;2554:23;2550:32;2547:52;;;2595:1;2592;2585:12;2547:52;2634:9;2621:23;2653:31;2678:5;2653:31;:::i;:::-;2703:5;2781:2;2766:18;;;;2753:32;;-1:-1:-1;;;2450:367:117:o;2822:420::-;2875:3;2913:5;2907:12;2940:6;2935:3;2928:19;2972:4;2967:3;2963:14;2956:21;;3011:4;3004:5;3000:16;3034:1;3044:173;3058:6;3055:1;3052:13;3044:173;;;3119:13;;3107:26;;3162:4;3153:14;;;;3190:17;;;;3080:1;3073:9;3044:173;;;-1:-1:-1;3233:3:117;;2822:420;-1:-1:-1;;;;2822:420:117:o;3247:261::-;3426:2;3415:9;3408:21;3389:4;3446:56;3498:2;3487:9;3483:18;3475:6;3446:56;:::i;3695:529::-;3772:6;3780;3788;3841:2;3829:9;3820:7;3816:23;3812:32;3809:52;;;3857:1;3854;3847:12;3809:52;3896:9;3883:23;3915:31;3940:5;3915:31;:::i;:::-;3965:5;-1:-1:-1;4022:2:117;4007:18;;3994:32;4035:33;3994:32;4035:33;:::i;:::-;4087:7;-1:-1:-1;4146:2:117;4131:18;;4118:32;4159:33;4118:32;4159:33;:::i;:::-;4211:7;4201:17;;;3695:529;;;;;:::o;4229:508::-;4306:6;4314;4322;4375:2;4363:9;4354:7;4350:23;4346:32;4343:52;;;4391:1;4388;4381:12;4343:52;4430:9;4417:23;4449:31;4474:5;4449:31;:::i;:::-;4499:5;-1:-1:-1;4556:2:117;4541:18;;4528:32;4569:33;4528:32;4569:33;:::i;:::-;4229:508;;4621:7;;-1:-1:-1;;;4701:2:117;4686:18;;;;4673:32;;4229:508::o;4742:117::-;4827:6;4820:5;4816:18;4809:5;4806:29;4796:57;;4849:1;4846;4839:12;4864:663;4946:6;4954;4962;4970;5023:3;5011:9;5002:7;4998:23;4994:33;4991:53;;;5040:1;5037;5030:12;4991:53;5079:9;5066:23;5098:30;5122:5;5098:30;:::i;:::-;5147:5;-1:-1:-1;5204:2:117;5189:18;;5176:32;5217;5176;5217;:::i;:::-;5268:7;-1:-1:-1;5327:2:117;5312:18;;5299:32;5340;5299;5340;:::i;:::-;5391:7;-1:-1:-1;5450:2:117;5435:18;;5422:32;5463;5422;5463;:::i;:::-;4864:663;;;;-1:-1:-1;4864:663:117;;-1:-1:-1;;4864:663:117:o;5760:346::-;5828:6;5836;5889:2;5877:9;5868:7;5864:23;5860:32;5857:52;;;5905:1;5902;5895:12;5857:52;-1:-1:-1;;5950:23:117;;;6070:2;6055:18;;;6042:32;;-1:-1:-1;5760:346:117:o;6470:507::-;6562:4;6554:5;6548:12;6544:23;6539:3;6532:36;6629:4;6621;6614:5;6610:16;6604:23;6600:34;6593:4;6588:3;6584:14;6577:58;6684:4;6677:5;6673:16;6667:23;6660:4;6655:3;6651:14;6644:47;6740:4;6733:5;6729:16;6723:23;6716:4;6711:3;6707:14;6700:47;6796:4;6789:5;6785:16;6779:23;6772:4;6767:3;6763:14;6756:47;6852:4;6845:5;6841:16;6835:23;6828:4;6823:3;6819:14;6812:47;6908:4;6901:5;6897:16;6891:23;6884:4;6879:3;6875:14;6868:47;6964:4;6957:5;6953:16;6947:23;6940:4;6935:3;6931:14;6924:47;;;6470:507::o;6982:233::-;7045:45;7086:3;7078:5;7072:12;7045:45;:::i;:::-;7136:4;7129:5;7125:16;7119:23;7151:58;7201:6;7196:3;7192:16;7178:12;7151:58;:::i;7220:255::-;7410:3;7395:19;;7423:46;7399:9;7451:6;7423:46;:::i;7480:127::-;7541:10;7536:3;7532:20;7529:1;7522:31;7572:4;7569:1;7562:15;7596:4;7593:1;7586:15;7612:255;7684:2;7678:9;7726:6;7714:19;;-1:-1:-1;;;;;7748:34:117;;7784:22;;;7745:62;7742:88;;;7810:18;;:::i;:::-;7846:2;7839:22;7612:255;:::o;7872:257::-;7944:4;7938:11;;;7976:17;;-1:-1:-1;;;;;8008:34:117;;8044:22;;;8005:62;8002:88;;;8070:18;;:::i;8134:253::-;8206:2;8200:9;8248:4;8236:17;;-1:-1:-1;;;;;8268:34:117;;8304:22;;;8265:62;8262:88;;;8330:18;;:::i;8392:255::-;8464:2;8458:9;8506:6;8494:19;;-1:-1:-1;;;;;8528:34:117;;8564:22;;;8525:62;8522:88;;;8590:18;;:::i;8652:275::-;8723:2;8717:9;8788:2;8769:13;;-1:-1:-1;;8765:27:117;8753:40;;-1:-1:-1;;;;;8808:34:117;;8844:22;;;8805:62;8802:88;;;8870:18;;:::i;:::-;8906:2;8899:22;8652:275;;-1:-1:-1;8652:275:117:o;8932:183::-;8992:4;-1:-1:-1;;;;;9017:6:117;9014:30;9011:56;;;9047:18;;:::i;:::-;-1:-1:-1;9092:1:117;9088:14;9104:4;9084:25;;8932:183::o;9120:940::-;9204:6;9257:2;9245:9;9236:7;9232:23;9228:32;9225:52;;;9273:1;9270;9263:12;9225:52;9313:9;9300:23;-1:-1:-1;;;;;9338:6:117;9335:30;9332:50;;;9378:1;9375;9368:12;9332:50;9401:22;;9454:4;9446:13;;9442:27;-1:-1:-1;9432:55:117;;9483:1;9480;9473:12;9432:55;9523:2;9510:16;9546:64;9562:47;9602:6;9562:47;:::i;:::-;9546:64;:::i;:::-;9632:3;9656:6;9651:3;9644:19;9688:2;9683:3;9679:12;9672:19;;9743:2;9733:6;9730:1;9726:14;9722:2;9718:23;9714:32;9700:46;;9769:7;9761:6;9758:19;9755:39;;;9790:1;9787;9780:12;9755:39;9822:2;9818;9814:11;9803:22;;9834:196;9850:6;9845:3;9842:15;9834:196;;;9940:17;;9970:18;;10017:2;9867:12;;;;10008;;;;9834:196;;11149:3694;11351:4;11399:2;11388:9;11384:18;11429:2;11418:9;11411:21;11452:6;11487;11481:13;11518:6;11510;11503:22;11556:2;11545:9;11541:18;11534:25;;11618:2;11608:6;11605:1;11601:14;11590:9;11586:30;11582:39;11568:53;;11656:2;11648:6;11644:15;11677:1;11687:3127;11701:6;11698:1;11695:13;11687:3127;;;11794:2;11790:7;11778:9;11770:6;11766:22;11762:36;11757:3;11750:49;11828:6;11822:13;11869:2;11863:9;11855:6;11848:25;11924:2;11920;11916:11;11910:18;11905:2;11897:6;11893:15;11886:43;11976:2;11972;11968:11;11962:18;11993:49;12038:2;12030:6;12026:15;12012:12;-1:-1:-1;;;;;1811:31:117;1799:44;;1745:104;11993:49;;12091:4;12087:2;12083:13;12077:20;12110:59;12163:4;12155:6;12151:17;12135:14;10155:4;10147:5;10141:12;10137:23;10132:3;10125:36;10222:4;10214;10207:5;10203:16;10197:23;10193:34;10186:4;10181:3;10177:14;10170:58;10277:4;10270:5;10266:16;10260:23;10253:4;10248:3;10244:14;10237:47;10333:4;10326:5;10322:16;10316:23;10309:4;10304:3;10300:14;10293:47;10389:4;10382:5;10378:16;10372:23;10365:4;10360:3;10356:14;10349:47;10445:4;10438:5;10434:16;10428:23;10421:4;10416:3;10412:14;10405:47;10501:4;10494:5;10490:16;10484:23;10477:4;10472:3;10468:14;10461:47;;;10065:449;12110:59;-1:-1:-1;12218:4:117;12210:13;;12204:20;10594:12;;12293:6;12281:19;;;10582:25;;;;10656:4;10645:16;;10639:23;10623:14;;;10616:47;10712:4;10701:16;;;10695:23;10679:14;;;10672:47;12350:4;12342:13;;12336:20;-1:-1:-1;;;;;1811:31:117;;;12416:6;12404:19;;1799:44;12473:4;12465:13;;12459:20;1811:31;;12539:6;12527:19;;1799:44;12596:4;12588:13;;12582:20;1811:31;;12662:6;12650:19;;1799:44;12719:6;12711:15;;12705:22;1811:31;;12787:6;12775:19;;1799:44;12844:6;12836:15;;12830:22;1811:31;12912:6;12900:19;;1799:44;12961:15;;12955:22;13018:6;13009;12997:19;;12990:35;;;13052:54;;13086:19;;12955:22;13052:54;:::i;:::-;13038:68;;13155:6;13151:2;13147:15;13141:22;13216:6;13208;13204:19;13195:6;13187;13183:19;13176:48;13251:41;13285:6;13269:14;13251:41;:::i;:::-;13237:55;;;13342:6;13338:2;13334:15;13328:22;13403:6;13395;13391:19;13382:6;13374;13370:19;13363:48;13438:42;13473:6;13456:15;13438:42;:::i;:::-;13424:56;;;13530:6;13526:2;13522:15;13516:22;13551:54;13597:6;13589;13585:19;13568:15;6457:4;6446:16;6434:29;;6390:75;13551:54;-1:-1:-1;13655:6:117;13647:15;;13641:22;6457:4;6446:16;;13722:6;13710:19;;6434:29;-1:-1:-1;13780:6:117;13772:15;;13766:22;6457:4;6446:16;;13847:6;13835:19;;6434:29;-1:-1:-1;13905:6:117;13897:15;;13891:22;6457:4;6446:16;;13972:6;13960:19;;6434:29;-1:-1:-1;14035:6:117;14027:15;;14021:22;14012:6;14000:19;;13993:51;14099:6;14091:15;;14085:22;14076:6;14064:19;;14057:51;14163:6;14155:15;;14149:22;14140:6;14128:19;;14121:51;14227:6;14219:15;;14213:22;14204:6;14192:19;;14185:51;14286:6;14278:15;;14272:22;10808:12;;14367:6;14355:19;;10796:25;10870:4;10859:16;;10853:23;10837:14;;;10830:47;10926:4;10915:16;;10909:23;10893:14;;;10886:47;10982:4;10971:16;;10965:23;10949:14;;;10942:47;-1:-1:-1;14425:6:117;14417:15;;14411:22;10594:12;;14503:6;14491:19;;10582:25;10656:4;10645:16;;10639:23;10623:14;;;10616:47;10712:4;10701:16;;10695:23;10679:14;;;10672:47;-1:-1:-1;14561:6:117;14553:15;;14547:22;11069:12;;14633:6;14621:19;;11057:25;11131:4;11120:16;;11114:23;11098:14;;;11091:47;-1:-1:-1;14696:6:117;14688:15;;;;14682:22;14673:6;14661:19;;;;14654:51;;;;14769:2;14792:12;;;;14757:15;;;;;11723:1;11716:9;11687:3127;;;-1:-1:-1;14831:6:117;;11149:3694;-1:-1:-1;;;;;;11149:3694:117:o;14848:648::-;14933:6;14941;14949;14957;15010:3;14998:9;14989:7;14985:23;14981:33;14978:53;;;15027:1;15024;15017:12;14978:53;15066:9;15053:23;15085:30;15109:5;15085:30;:::i;:::-;15134:5;-1:-1:-1;15191:2:117;15176:18;;15163:32;15204:33;15163:32;15204:33;:::i;:::-;15256:7;-1:-1:-1;15315:2:117;15300:18;;15287:32;15328:33;15287:32;15328:33;:::i;:::-;14848:648;;;;-1:-1:-1;15380:7:117;;15460:2;15445:18;15432:32;;-1:-1:-1;;14848:648:117:o;15501:118::-;15587:5;15580:13;15573:21;15566:5;15563:32;15553:60;;15609:1;15606;15599:12;15624:380;15688:6;15696;15749:2;15737:9;15728:7;15724:23;15720:32;15717:52;;;15765:1;15762;15755:12;15717:52;15804:9;15791:23;15823:30;15847:5;15823:30;:::i;:::-;15872:5;-1:-1:-1;15929:2:117;15914:18;;15901:32;15942:30;15901:32;15942:30;:::i;:::-;15991:7;15981:17;;;15624:380;;;;;:::o;16009:790::-;16103:6;16111;16119;16127;16135;16188:3;16176:9;16167:7;16163:23;16159:33;16156:53;;;16205:1;16202;16195:12;16156:53;16244:9;16231:23;16263:31;16288:5;16263:31;:::i;:::-;16313:5;-1:-1:-1;16370:2:117;16355:18;;16342:32;16383;16342;16383;:::i;:::-;16434:7;-1:-1:-1;16493:2:117;16478:18;;16465:32;16506:33;16465:32;16506:33;:::i;:::-;16558:7;-1:-1:-1;16617:2:117;16602:18;;16589:32;16630:33;16589:32;16630:33;:::i;:::-;16009:790;;;;-1:-1:-1;16009:790:117;;16762:3;16747:19;16734:33;;16009:790;-1:-1:-1;;16009:790:117:o;16804:502::-;16878:6;16886;16894;16947:2;16935:9;16926:7;16922:23;16918:32;16915:52;;;16963:1;16960;16953:12;16915:52;17008:23;;;-1:-1:-1;17107:2:117;17092:18;;17079:32;17120:33;17079:32;17120:33;:::i;:::-;17172:7;-1:-1:-1;17231:2:117;17216:18;;17203:32;17244:30;17203:32;17244:30;:::i;17311:114::-;17395:4;17388:5;17384:16;17377:5;17374:27;17364:55;;17415:1;17412;17405:12;17430:621;17512:6;17520;17528;17536;17589:3;17577:9;17568:7;17564:23;17560:33;17557:53;;;17606:1;17603;17596:12;17557:53;17651:23;;;-1:-1:-1;17771:2:117;17756:18;;17743:32;;-1:-1:-1;17853:2:117;17838:18;;17825:32;17866:31;17825:32;17866:31;:::i;:::-;17916:7;-1:-1:-1;17975:2:117;17960:18;;17947:32;17988:31;17947:32;17988:31;:::i;18958:245::-;19016:6;19069:2;19057:9;19048:7;19044:23;19040:32;19037:52;;;19085:1;19082;19075:12;19037:52;19124:9;19111:23;19143:30;19167:5;19143:30;:::i;19461:367::-;19529:6;19537;19590:2;19578:9;19569:7;19565:23;19561:32;19558:52;;;19606:1;19603;19596:12;19558:52;19651:23;;;-1:-1:-1;19750:2:117;19735:18;;19722:32;19763:33;19722:32;19763:33;:::i;20288:382::-;20353:6;20361;20414:2;20402:9;20393:7;20389:23;20385:32;20382:52;;;20430:1;20427;20420:12;20382:52;20469:9;20456:23;20488:31;20513:5;20488:31;:::i;21301:817::-;21569:2;21581:21;;;21651:13;;21554:18;;;21673:22;;;21521:4;;21764;21752:17;;;21726:2;21711:18;;;21521:4;21797:199;21811:6;21808:1;21805:13;21797:199;;;21876:13;;-1:-1:-1;;;;;21872:39:117;21860:52;;21941:4;21969:17;;;;21932:14;;;;21908:1;21826:9;21797:199;;;21801:3;;22043:9;22038:3;22034:19;22027:4;22016:9;22012:20;22005:49;22071:41;22108:3;22100:6;22071:41;:::i;22347:186::-;22395:4;-1:-1:-1;;;;;22420:6:117;22417:30;22414:56;;;22450:18;;:::i;:::-;-1:-1:-1;22516:2:117;22495:15;-1:-1:-1;;22491:29:117;22522:4;22487:40;;22347:186::o;22538:486::-;22580:5;22633:3;22626:4;22618:6;22614:17;22610:27;22600:55;;22651:1;22648;22641:12;22600:55;22691:6;22678:20;22722:52;22738:35;22766:6;22738:35;:::i;22722:52::-;22799:6;22790:7;22783:23;22853:3;22846:4;22837:6;22829;22825:19;22821:30;22818:39;22815:59;;;22870:1;22867;22860:12;22815:59;22935:6;22928:4;22920:6;22916:17;22909:4;22900:7;22896:18;22883:59;22991:1;22962:20;;;22984:4;22958:31;22951:42;;;;22966:7;22538:486;-1:-1:-1;;;22538:486:117:o;23029:575::-;23115:6;23123;23131;23184:2;23172:9;23163:7;23159:23;23155:32;23152:52;;;23200:1;23197;23190:12;23152:52;23239:9;23226:23;23258:31;23283:5;23258:31;:::i;:::-;23308:5;-1:-1:-1;23386:2:117;23371:18;;23358:32;;-1:-1:-1;23467:2:117;23452:18;;23439:32;-1:-1:-1;;;;;23483:30:117;;23480:50;;;23526:1;23523;23516:12;23480:50;23549:49;23590:7;23581:6;23570:9;23566:22;23549:49;:::i;:::-;23539:59;;;23029:575;;;;;:::o;23609:717::-;23704:6;23712;23720;23728;23781:3;23769:9;23760:7;23756:23;23752:33;23749:53;;;23798:1;23795;23788:12;23749:53;23837:9;23824:23;23856:31;23881:5;23856:31;:::i;:::-;23906:5;-1:-1:-1;23963:2:117;23948:18;;23935:32;23976:33;23935:32;23976:33;:::i;:::-;24028:7;-1:-1:-1;24108:2:117;24093:18;;24080:32;;-1:-1:-1;24189:2:117;24174:18;;24161:32;-1:-1:-1;;;;;24205:30:117;;24202:50;;;24248:1;24245;24238:12;24202:50;24271:49;24312:7;24303:6;24292:9;24288:22;24271:49;:::i;:::-;24261:59;;;23609:717;;;;;;;:::o;24331:692::-;24577:2;24589:21;;;24659:13;;24562:18;;;24681:22;;;24529:4;;24760:15;;;24734:2;24719:18;;;24529:4;24803:194;24817:6;24814:1;24811:13;24803:194;;;24866:47;24909:3;24900:6;24894:13;24866:47;:::i;:::-;24984:2;24972:15;;;;;24942:6;24933:16;;;;;24839:1;24832:9;24803:194;;;-1:-1:-1;25014:3:117;;24331:692;-1:-1:-1;;;;;24331:692:117:o;25028:504::-;25103:6;25111;25119;25172:2;25160:9;25151:7;25147:23;25143:32;25140:52;;;25188:1;25185;25178:12;25140:52;25233:23;;;-1:-1:-1;25332:2:117;25317:18;;25304:32;25345:31;25304:32;25345:31;:::i;25861:487::-;25938:6;25946;25954;26007:2;25995:9;25986:7;25982:23;25978:32;25975:52;;;26023:1;26020;26013:12;25975:52;26068:23;;;-1:-1:-1;26167:2:117;26152:18;;26139:32;26180:33;26139:32;26180:33;:::i;26353:388::-;26421:6;26429;26482:2;26470:9;26461:7;26457:23;26453:32;26450:52;;;26498:1;26495;26488:12;26450:52;26537:9;26524:23;26556:31;26581:5;26556:31;:::i;:::-;26606:5;-1:-1:-1;26663:2:117;26648:18;;26635:32;26676:33;26635:32;26676:33;:::i;26746:487::-;26823:6;26831;26839;26892:2;26880:9;26871:7;26867:23;26863:32;26860:52;;;26908:1;26905;26898:12;26860:52;26953:23;;;-1:-1:-1;27073:2:117;27058:18;;27045:32;;-1:-1:-1;27155:2:117;27140:18;;27127:32;27168:33;27127:32;27168:33;:::i;27778:363::-;27844:6;27852;27905:2;27893:9;27884:7;27880:23;27876:32;27873:52;;;27921:1;27918;27911:12;27873:52;27966:23;;;-1:-1:-1;28065:2:117;28050:18;;28037:32;28078:31;28037:32;28078:31;:::i;28406:270::-;28495:6;28548:2;28536:9;28527:7;28523:23;28519:32;28516:52;;;28564:1;28561;28554:12;28516:52;28596:9;28590:16;28615:31;28640:5;28615:31;:::i;28681:127::-;28742:10;28737:3;28733:20;28730:1;28723:31;28773:4;28770:1;28763:15;28797:4;28794:1;28787:15;29189:127;29250:10;29245:3;29241:20;29238:1;29231:31;29281:4;29278:1;29271:15;29305:4;29302:1;29295:15;29321:155;29412:6;29389:14;;;29405;;;29385:35;;29432:15;;29429:41;;;29450:18;;:::i;29481:158::-;29574:6;29567:14;;;29551;;;29547:35;;29594:16;;29591:42;;;29613:18;;:::i;29644:168::-;29717:9;;;29748;;29765:15;;;29759:22;;29745:37;29735:71;;29786:18;;:::i;29817:217::-;29857:1;29883;29873:132;;29927:10;29922:3;29918:20;29915:1;29908:31;29962:4;29959:1;29952:15;29990:4;29987:1;29980:15;29873:132;-1:-1:-1;30019:9:117;;29817:217::o;30039:134::-;30116:13;;30138:29;30116:13;30138:29;:::i;30178:1043::-;30244:5;30292:6;30280:9;30275:3;30271:19;30267:32;30264:52;;;30312:1;30309;30302:12;30264:52;30334:22;;:::i;:::-;30325:31;;30386:9;30380:16;30405:31;30428:7;30405:31;:::i;:::-;30445:22;;30499:47;30542:2;30527:18;;30499:47;:::i;:::-;30494:2;30483:14;;30476:71;30613:2;30598:18;;;30592:25;30633:14;;;30626:31;30723:2;30708:18;;;30702:25;30743:14;;;30736:31;30833:3;30818:19;;;30812:26;30854:15;;;30847:32;30945:3;30930:19;;;30924:26;30966:15;;;30959:32;31057:3;31042:19;;;31036:26;31078:15;;;31071:32;31169:3;31154:19;;;31148:26;31190:15;;;31183:32;;;;30487:5;30178:1043;-1:-1:-1;30178:1043:117:o;31226:360::-;31293:5;31341:6;31329:9;31324:3;31320:19;31316:32;31313:52;;;31361:1;31358;31351:12;31313:52;31383:22;;:::i;:::-;31374:31;;31428:53;31477:3;31466:9;31428:53;:::i;:::-;31421:5;31414:68;31516:63;31575:3;31569;31558:9;31554:19;31516:63;:::i;:::-;31509:4;31502:5;31498:16;31491:89;31226:360;;;;:::o;31591:255::-;31689:6;31742:3;31730:9;31721:7;31717:23;31713:33;31710:53;;;31759:1;31756;31749:12;31710:53;31782:58;31832:7;31821:9;31782:58;:::i;31851:138::-;31930:13;;31952:31;31930:13;31952:31;:::i;31994:976::-;32058:5;32106:4;32094:9;32089:3;32085:19;32081:30;32078:50;;;32124:1;32121;32114:12;32078:50;32146:22;;:::i;:::-;32137:31;;32198:9;32192:16;32217:31;32240:7;32217:31;:::i;:::-;32257:22;;32324:2;32309:18;;32303:25;32337:31;32303:25;32337:31;:::i;:::-;32395:2;32384:14;;32377:31;32474:2;32459:18;;;32453:25;32494:14;;;32487:31;32584:2;32569:18;;;32563:25;32604:14;;;32597:31;32694:3;32679:19;;;32673:26;32715:15;;;32708:32;32806:3;32791:19;;;32785:26;32827:15;;;32820:32;32918:3;32903:19;;;32897:26;32939:15;;;32932:32;;;;32388:5;31994:976;-1:-1:-1;31994:976:117:o;32975:706::-;33042:5;33090:4;33078:9;33073:3;33069:19;33065:30;33062:50;;;33108:1;33105;33098:12;33062:50;33161:2;33155:9;33203:4;33191:17;;-1:-1:-1;;;;;33223:34:117;;33259:22;;;33220:62;33217:88;;;33285:18;;:::i;:::-;33321:2;33314:22;;;33405:16;;33430:23;;33519:2;33504:18;;;33498:25;33539:15;;;33532:32;33615:18;;;33609:25;33650:15;;;33643:32;;;;-1:-1:-1;33354:6:117;32975:706;-1:-1:-1;32975:706:117:o;33686:484::-;33740:5;33793:3;33786:4;33778:6;33774:17;33770:27;33760:55;;33811:1;33808;33801:12;33760:55;33844:6;33838:13;33875:52;33891:35;33919:6;33891:35;:::i;33875:52::-;33952:6;33943:7;33936:23;34006:3;33999:4;33990:6;33982;33978:19;33974:30;33971:39;33968:59;;;34023:1;34020;34013:12;33968:59;34081:6;34074:4;34066:6;34062:17;34055:4;34046:7;34042:18;34036:52;34137:1;34108:20;;;34130:4;34104:31;34097:42;;;;34112:7;33686:484;-1:-1:-1;;;33686:484:117:o;34175:820::-;34245:5;34293:4;34281:9;34276:3;34272:19;34268:30;34265:50;;;34311:1;34308;34301:12;34265:50;34364:2;34358:9;34406:4;34394:17;;-1:-1:-1;;;;;34426:34:117;;34462:22;;;34423:62;34420:88;;;34488:18;;:::i;:::-;34524:2;34517:22;;;34608:16;;34633:23;;34722:2;34707:18;;;34701:25;34742:15;;;34735:32;34818:18;;;34812:25;34853:15;;;34846:32;34944:2;34929:18;;;34923:25;34964:15;;;34957:32;;;;-1:-1:-1;34557:6:117;34175:820;-1:-1:-1;34175:820:117:o;35000:379::-;35061:5;35109:4;35097:9;35092:3;35088:19;35084:30;35081:50;;;35127:1;35124;35117:12;35081:50;35149:22;;:::i;:::-;35216:16;;35241:22;;35329:2;35314:18;;;35308:25;35349:14;;;35342:31;;;;-1:-1:-1;35140:31:117;35000:379;-1:-1:-1;35000:379:117:o;35384:3948::-;35509:6;35562:2;35550:9;35541:7;35537:23;35533:32;35530:52;;;35578:1;35575;35568:12;35530:52;35611:9;35605:16;-1:-1:-1;;;;;35636:6:117;35633:30;35630:50;;;35676:1;35673;35666:12;35630:50;35699:22;;35752:4;35744:13;;35740:27;-1:-1:-1;35730:55:117;;35781:1;35778;35771:12;35730:55;35814:2;35808:9;35837:64;35853:47;35893:6;35853:47;:::i;35837:64::-;35923:3;35947:6;35942:3;35935:19;35979:2;35974:3;35970:12;35963:19;;36034:2;36024:6;36021:1;36017:14;36013:2;36009:23;36005:32;35991:46;;36060:7;36052:6;36049:19;36046:39;;;36081:1;36078;36071:12;36046:39;36113:2;36109;36105:11;36125:3177;36141:6;36136:3;36133:15;36125:3177;;;36220:3;36214:10;-1:-1:-1;;;;;36243:11:117;36240:35;36237:55;;;36288:1;36285;36278:12;36237:55;36315:20;;36387:6;36359:16;;;-1:-1:-1;;36355:30:117;36351:43;36348:63;;;36407:1;36404;36397:12;36348:63;36437:22;;:::i;:::-;36526:2;36518:11;;;36512:18;36543:22;;36632:2;36624:11;;36618:18;36656:14;;;36649:31;36716:42;36754:2;36746:11;;36716:42;:::i;:::-;36711:2;36704:5;36700:14;36693:66;36795:59;36846:7;36839:4;36835:2;36831:13;36795:59;:::i;:::-;36790:2;36783:5;36779:14;36772:83;36893:64;36949:7;36940:6;36936:2;36932:15;36893:64;:::i;:::-;36886:4;36879:5;36875:16;36868:90;36996:43;37034:3;37030:2;37026:12;36996:43;:::i;:::-;36989:4;36982:5;36978:16;36971:69;37078:43;37116:3;37112:2;37108:12;37078:43;:::i;:::-;37071:4;37064:5;37060:16;37053:69;37160:43;37198:3;37194:2;37190:12;37160:43;:::i;:::-;37153:4;37146:5;37142:16;37135:69;37244:43;37282:3;37278:2;37274:12;37244:43;:::i;:::-;37235:6;37228:5;37224:18;37217:71;37328:43;37366:3;37362:2;37358:12;37328:43;:::i;:::-;37319:6;37312:5;37308:18;37301:71;37415:3;37411:2;37407:12;37401:19;-1:-1:-1;;;;;37439:8:117;37436:32;37433:52;;;37481:1;37478;37471:12;37433:52;37522:65;37579:7;37574:2;37563:8;37559:2;37555:17;37551:26;37522:65;:::i;:::-;37516:3;37509:5;37505:15;37498:90;;37631:3;37627:2;37623:12;37617:19;-1:-1:-1;;;;;37655:8:117;37652:32;37649:52;;;37697:1;37694;37687:12;37649:52;37741:65;37798:7;37793:2;37782:8;37778:2;37774:17;37770:26;37741:65;:::i;:::-;37732:6;37725:5;37721:18;37714:93;;37850:3;37846:2;37842:12;37836:19;-1:-1:-1;;;;;37874:8:117;37871:32;37868:52;;;37916:1;37913;37906:12;37868:52;37960:65;38017:7;38012:2;38001:8;37997:2;37993:17;37989:26;37960:65;:::i;:::-;37951:6;37944:5;37940:18;37933:93;;38063:41;38099:3;38095:2;38091:12;38063:41;:::i;:::-;38057:3;38050:5;38046:15;38039:66;38142:41;38178:3;38174:2;38170:12;38142:41;:::i;:::-;38136:3;38129:5;38125:15;38118:66;38221:41;38257:3;38253:2;38249:12;38221:41;:::i;:::-;38215:3;38208:5;38204:15;38197:66;38300:44;38336:6;38332:2;38328:15;38300:44;:::i;:::-;38294:3;38283:15;;38276:69;38412:3;38404:12;;38398:19;38448:3;38437:15;;38430:32;38529:3;38521:12;;38515:19;38565:3;38554:15;;38547:32;38646:3;38638:12;;38632:19;38682:3;38671:15;;38664:32;38763:3;38755:12;;38749:19;38799:3;38788:15;;38781:32;38850:64;38906:7;38900:3;38892:12;;38850:64;:::i;:::-;38844:3;38837:5;38833:15;38826:89;38952:62;39006:7;38999:4;38995:2;38991:13;38952:62;:::i;:::-;38946:3;38939:5;38935:15;38928:87;39052:56;39100:7;39093:4;39089:2;39085:13;39052:56;:::i;:::-;39046:3;39035:15;;39028:81;39176:6;39168:15;;;;39162:22;39215:3;39204:15;;39197:32;39242:18;;39289:2;39280:12;;;;36158;36125:3177;;;-1:-1:-1;39321:5:117;35384:3948;-1:-1:-1;;;;;;35384:3948:117:o;39969:135::-;40008:3;40029:17;;;40026:43;;40049:18;;:::i;:::-;-1:-1:-1;40096:1:117;40085:13;;39969:135::o;40381:343::-;40460:6;40468;40521:2;40509:9;40500:7;40496:23;40492:32;40489:52;;;40537:1;40534;40527:12;40489:52;-1:-1:-1;;40582:16:117;;40688:2;40673:18;;;40667:25;40582:16;;40667:25;;-1:-1:-1;40381:343:117:o;40729:125::-;40794:9;;;40815:10;;;40812:36;;;40828:18;;:::i;40859:148::-;40947:4;40926:12;;;40940;;;40922:31;;40965:13;;40962:39;;;40981:18;;:::i;41012:128::-;41079:9;;;41100:11;;;41097:37;;;41114:18;;:::i;41145:1373::-;41305:6;41313;41321;41329;41337;41345;41353;41361;41369;41377;41385:7;41439:3;41427:9;41418:7;41414:23;41410:33;41407:53;;;41456:1;41453;41446:12;41407:53;41482:1;41507:9;41501:16;41492:25;;41536:5;41526:15;;;41565:1;41607:2;41596:9;41592:18;41586:25;41575:36;;41630:7;41620:17;;;41661:1;41703:2;41692:9;41688:18;41682:25;41671:36;;41726:7;41716:17;;;41757:1;41799:2;41788:9;41784:18;41778:25;41767:36;;41822:7;41812:17;;;41853:1;41895:3;41884:9;41880:19;41874:26;41863:37;;41919:7;41909:17;;;41950:1;41992:3;41981:9;41977:19;41971:26;41960:37;;42016:7;42006:17;;;42047:1;42089:3;42078:9;42074:19;42068:26;42057:37;;42113:7;42103:17;;;42144:1;42186:3;42175:9;42171:19;42165:26;42154:37;;42210:7;42200:17;;;42241:1;42283:3;42272:9;42268:19;42262:26;42251:37;;42307:7;42297:17;;;42338:1;42380:3;42369:9;42365:19;42359:26;42348:37;;42404:7;42394:17;;;42436:1;42479:3;42468:9;42464:19;42458:26;42446:38;;42504:8;42493:19;;;41145:1373;;;;;;;;;;;;;;:::o;42523:337::-;42603:6;42656:2;42644:9;42635:7;42631:23;42627:32;42624:52;;;42672:1;42669;42662:12;42624:52;42705:9;42699:16;-1:-1:-1;;;;;42730:6:117;42727:30;42724:50;;;42770:1;42767;42760:12;42724:50;42793:61;42846:7;42837:6;42826:9;42822:22;42793:61;:::i;42865:249::-;42934:6;42987:2;42975:9;42966:7;42962:23;42958:32;42955:52;;;43003:1;43000;42993:12;42955:52;43035:9;43029:16;43054:30;43078:5;43054:30;:::i;43119:946::-;43239:6;43247;43255;43263;43271;43279;43287;43340:3;43328:9;43319:7;43315:23;43311:33;43308:53;;;43357:1;43354;43347:12;43308:53;43389:9;43383:16;43408:29;43431:5;43408:29;:::i;:::-;43506:2;43491:18;;43485:25;43456:5;;-1:-1:-1;43519:31:117;43485:25;43519:31;:::i;:::-;43642:2;43627:18;;43621:25;43738:2;43723:18;;43717:25;43834:3;43819:19;;43813:26;43931:3;43916:19;;43910:26;44028:3;44013:19;;;44007:26;43119:946;;43569:7;;-1:-1:-1;43621:25:117;;43717;;43813:26;;-1:-1:-1;43910:26:117;-1:-1:-1;44007:26:117;-1:-1:-1;43119:946:117;-1:-1:-1;;;43119:946:117:o;44070:245::-;44137:6;44190:2;44178:9;44169:7;44165:23;44161:32;44158:52;;;44206:1;44203;44196:12;44158:52;44238:9;44232:16;44257:28;44279:5;44257:28;:::i;44759:301::-;44888:3;44926:6;44920:13;44972:6;44965:4;44957:6;44953:17;44948:3;44942:37;45034:1;44998:16;;45023:13;;;-1:-1:-1;44998:16:117;44759:301;-1:-1:-1;44759:301:117:o;45065:950::-;45188:6;45241:2;45229:9;45220:7;45216:23;45212:32;45209:52;;;45257:1;45254;45247:12;45209:52;45290:9;45284:16;-1:-1:-1;;;;;45315:6:117;45312:30;45309:50;;;45355:1;45352;45345:12;45309:50;45378:22;;45431:4;45423:13;;45419:27;-1:-1:-1;45409:55:117;;45460:1;45457;45450:12;45409:55;45493:2;45487:9;45516:64;45532:47;45572:6;45532:47;:::i;45516:64::-;45602:3;45626:6;45621:3;45614:19;45658:2;45653:3;45649:12;45642:19;;45713:2;45703:6;45700:1;45696:14;45692:2;45688:23;45684:32;45670:46;;45739:7;45731:6;45728:19;45725:39;;;45760:1;45757;45750:12;45725:39;45792:2;45788;45784:11;45773:22;;45804:181;45820:6;45815:3;45812:15;45804:181;;;45890:52;45934:7;45929:3;45890:52;:::i;:::-;45885:3;45878:65;45972:2;45967:3;45963:12;45956:19;;45846:6;45841:3;45837:16;45830:23;;45804:181;;46152:456;46240:6;46248;46256;46309:2;46297:9;46288:7;46284:23;46280:32;46277:52;;;46325:1;46322;46315:12;46277:52;-1:-1:-1;;46370:16:117;;46476:2;46461:18;;46455:25;46572:2;46557:18;;;46551:25;46370:16;;46455:25;;-1:-1:-1;46551:25:117;46152:456;-1:-1:-1;46152:456:117:o;46613:230::-;46683:6;46736:2;46724:9;46715:7;46711:23;46707:32;46704:52;;;46752:1;46749;46742:12;46704:52;-1:-1:-1;46797:16:117;;46613:230;-1:-1:-1;46613:230:117:o;48309:485::-;-1:-1:-1;;;;;48540:32:117;;;48522:51;;48609:32;;48604:2;48589:18;;48582:60;48673:2;48658:18;;48651:34;;;48721:3;48716:2;48701:18;;48694:31;;;-1:-1:-1;;48742:46:117;;48768:19;;48760:6;48742:46;:::i;48799:249::-;48868:6;48921:2;48909:9;48900:7;48896:23;48892:32;48889:52;;;48937:1;48934;48927:12;48889:52;48969:9;48963:16;48988:30;49012:5;48988:30;:::i;49053:127::-;49114:10;49109:3;49105:20;49102:1;49095:31;49145:4;49142:1;49135:15;49169:4;49166:1;49159:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DENOMINATOR()": "918f8674",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "buyRoyalty(uint256)": "755b9162",
    "buyRoyaltyTo(uint256,address)": "dc49b190",
    "calcGRETHShares(uint256,uint256,address)": "dec39715",
    "calcRoyaltyPriceShares(uint256)": "ef38e4e3",
    "calcRoyaltyShares(uint256,uint256)": "a8c9d304",
    "deposit(uint256,uint256)": "e2bbb158",
    "deposited(uint256,address)": "a2383106",
    "execute(address,uint256,bytes)": "b61d27f6",
    "exit(uint256)": "7f8661a1",
    "getApproved(uint256)": "081812fc",
    "getConfig(uint256)": "a81b2f8d",
    "getFeeConfig(uint256)": "c8b7cdb5",
    "getPoolIdsOf(address)": "0cccd888",
    "getPoolNFTInfosBy(uint256[])": "36e68f54",
    "getPositions(uint256)": "30e00596",
    "getPositionsBy(uint256[])": "bde855e5",
    "getRoyaltyReceiver(uint256)": "5b71ecb5",
    "getThresholds(uint256)": "685fb6da",
    "grETH()": "a93d57a1",
    "grethGrinderShareNumerator()": "04f6430e",
    "grethPoolOwnerShareNumerator()": "1927c4ea",
    "grethReserveShareNumerator()": "ce339395",
    "grethRoyaltyReceiverShareNumerator()": "b3628932",
    "grind(uint256)": "09dbb6ea",
    "grindOp(uint256,uint8)": "f059deb2",
    "grindOpTo(uint256,uint8,address)": "c0b7b578",
    "grindTo(uint256,address)": "b2d5cca7",
    "grinderAI()": "2980b2ff",
    "init(address,address,address)": "184b9559",
    "isAgentOf(address,address)": "cdb0d023",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isDepositorOf(uint256,address)": "849784d4",
    "isDisapprovedGrinderAI(address)": "ea85781d",
    "isStrategyStopped(uint16)": "6db47de9",
    "maxDeposit(address)": "402d267d",
    "minDeposit(address)": "3c29f839",
    "mint(uint16,address,address,uint256)": "37566d54",
    "mintTo(address,uint16,address,address,uint256)": "592ae17f",
    "minter(uint256)": "ac8d856c",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "pendingOwner()": "e30c3978",
    "poolIds(address)": "d4175be2",
    "poolOwnerShareNumerator()": "e60ed1f3",
    "pools(uint256)": "ac4afa38",
    "poolsNFTLens()": "8e22e7c3",
    "rebalance(uint256,uint256,uint8,uint8)": "5db44744",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "royaltyNumerator()": "2bb80474",
    "royaltyOwnerShareNumerator()": "bfe121e5",
    "royaltyPrice(uint256)": "26ca015a",
    "royaltyPriceCompensationShareNumerator()": "352333f2",
    "royaltyPriceInitNumerator()": "2a67fe0b",
    "royaltyPriceOwnerShareNumerator()": "36b02baf",
    "royaltyPricePoolOwnerShareNumerator()": "4f99f04a",
    "royaltyPriceReserveShareNumerator()": "f9298928",
    "royaltyReceiver(uint256)": "5cd2dd5e",
    "royaltyReceiverShareNumerator()": "053604ed",
    "royaltyReserveShareNumerator()": "6d3a87db",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setAgent(address,bool)": "97d8c676",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDepositor(uint256,address,bool)": "5d2d1920",
    "setGRETH(address)": "0861751f",
    "setGRETHShares(uint16,uint16,uint16,uint16)": "ca05262b",
    "setGrinderAI(address)": "98ac3255",
    "setMaxDeposit(address,uint256)": "73f65f8a",
    "setMinDeposit(address,uint256)": "912d1a86",
    "setPoolsNFTLens(address)": "f2602720",
    "setRoyaltyPriceInitNumerator(uint16)": "ab6e9690",
    "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": "c0b929e6",
    "setRoyaltyShares(uint16,uint16,uint16,uint16)": "27f8cabb",
    "setStrategyFactory(address)": "a5352bfd",
    "setStrategyStopped(uint16,bool)": "55b2d01e",
    "strategyFactory(uint16)": "eb9b7986",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalDeposited(address)": "53055481",
    "totalPools()": "ab3c7e52",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdraw(uint256,uint256)": "441a3e70",
    "withdrawTo(uint256,address,uint256)": "caa7262b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DifferentOwnersOfPools\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DifferentTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMinDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidGRETHShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyaltyPriceInit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyaltyPriceShare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyaltyShares\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCapital\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAgent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDepositor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMatchPoolsNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOf\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwnerOrPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyStopped\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidPrice\",\"type\":\"uint256\"}],\"name\":\"BuyRoyalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Exit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"name\":\"Grind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId1\",\"type\":\"uint256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"buyRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"buyRoyaltyTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"royaltyPricePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grethReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"calcGRETHShares\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"actors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"grethShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"calcRoyaltyPriceShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"compensationShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolOwnerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldRoyaltyPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newRoyaltyPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"calcRoyaltyShares\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"longNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hedgeNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"extraCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceVolatility\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentLongSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeRebuy\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"longSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuyFeeCoef\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"}],\"name\":\"getPoolIdsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"poolIdsOwnedByPoolOwner\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"}],\"name\":\"getPoolNFTInfosBy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"longNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hedgeNumberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"extraCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceVolatilityPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentLongSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnPercentHedgeRebuy\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Config\",\"name\":\"config\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"longSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellFeeCoef\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuyFeeCoef\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"oracleQuoteTokenPerBaseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracleQuoteTokenPerFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"feeTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"quoteTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"oracleQuoteTokenPerBaseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"oracleQuoteTokenPerFeeTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quoteTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"baseTokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeCapital\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"quoteTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenYieldProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenTradeProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseTokenTradeProfit\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.TotalProfits\",\"name\":\"totalProfits\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ROINumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ROIDeniminator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ROIPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.ROI\",\"name\":\"roi\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APRNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"APRDenominator\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.APR\",\"name\":\"apr\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"royaltyPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPoolsNFTLens.PoolNFTInfo[]\",\"name\":\"poolNFTInfos\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getPositions\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"long\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"hedge\",\"type\":\"tuple\"}],\"internalType\":\"struct IPoolsNFTLens.Positions\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"}],\"name\":\"getPositionsBy\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"long\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"number\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"numberMax\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeQty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IURUS.Position\",\"name\":\"hedge\",\"type\":\"tuple\"}],\"internalType\":\"struct IPoolsNFTLens.Positions[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"getThresholds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"longBuyPriceMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longSellQuoteTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longSellSwapPriceThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellInitPriceThresholdHigh\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellInitPriceThresholdLow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellQuoteTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellTargetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeSellSwapPriceThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuyBaseTokenAmountThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hedgeRebuySwapPriceThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grETH\",\"outputs\":[{\"internalType\":\"contract IGRETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethGrinderShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethPoolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grethRoyaltyReceiverShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"grind\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"}],\"name\":\"grindOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"op\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"grindOpTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"grinder\",\"type\":\"address\"}],\"name\":\"grindTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isGrinded\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grinderAI\",\"outputs\":[{\"internalType\":\"contract IGrinderAI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolsNFTLens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_grETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_grinderAI\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"isAgentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"isDepositorOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerOf\",\"type\":\"address\"}],\"name\":\"isDisapprovedGrinderAI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"isStrategyStopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"minDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"poolIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolsNFTLens\",\"outputs\":[{\"internalType\":\"contract IPoolsNFTLens\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolId1\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"rebalance0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"rebalance1\",\"type\":\"uint8\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"royaltyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceCompensationShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceInitNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPricePoolOwnerShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyPriceReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"royaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyReceiverShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyReserveShareNumerator\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_agentApproval\",\"type\":\"bool\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_depositorApproval\",\"type\":\"bool\"}],\"name\":\"setDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_grETH\",\"type\":\"address\"}],\"name\":\"setGRETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_grethGrinderShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethPoolOwnerShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_grethRoyaltyReceiverShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setGRETHShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_grinderAI\",\"type\":\"address\"}],\"name\":\"setGrinderAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposit\",\"type\":\"uint256\"}],\"name\":\"setMaxDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minDeposit\",\"type\":\"uint256\"}],\"name\":\"setMinDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolsNFTLens\",\"type\":\"address\"}],\"name\":\"setPoolsNFTLens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceInitNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyPriceInitNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceCompensationShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPricePoolOwnerShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyPriceOwnerShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyPriceShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_poolOwnerRoyaltyShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyReceiverShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyReserveShareNumerator\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_royaltyOwnerShareNumerator\",\"type\":\"uint16\"}],\"name\":\"setRoyaltyShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategyFactory\",\"type\":\"address\"}],\"name\":\"setStrategyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"_isStrategyStopped\",\"type\":\"bool\"}],\"name\":\"setStrategyStopped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"strategyId\",\"type\":\"uint16\"}],\"name\":\"strategyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Triple Panic Labs. CTO Vakhtanh Chikhladze (the.vaho1337@gmail.com)\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"base URI holds on poolsNFTLens\"},\"buyRoyalty(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"_0\":\"royaltyPricePaid paid for royalty\"}},\"buyRoyaltyTo(uint256,address)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"royaltyPricePaid\":\"paid for royalty\"}},\"calcGRETHShares(uint256,uint256,address)\":{\"params\":{\"grethReward\":\"amount of grETH\",\"poolId\":\"pool id of pool in array `pools`\"}},\"calcRoyaltyPriceShares(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"compensationShare\":\"feeToken amount to be received to old owner as compensation\",\"newRoyaltyPrice\":\"feeToken amount of new royalty price\",\"oldRoyaltyPrice\":\"feeToken amount of old royalty price\",\"ownerShare\":\"feeToken amount to be received to last grinder\",\"poolOwnerShare\":\"feeToken amount to be received by pool owner\",\"reserveShare\":\"feeToken amount to be received by primary royalty receiver\"}},\"calcRoyaltyShares(uint256,uint256)\":{\"details\":\"returns array of receivers and amounts\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"profit\":\"amount of token to be distributed\"}},\"deposit(uint256,uint256)\":{\"details\":\"callable only by owner of poolId\",\"params\":{\"poolId\":\"id of pool in array `pools`\",\"quoteTokenAmount\":\"amount of `quoteToken`\"},\"returns\":{\"_0\":\"depositedAmount amount of deposited `quoteToken`\"}},\"execute(address,uint256,bytes)\":{\"details\":\"callable only by owner\",\"params\":{\"data\":\"data to execute on target contract\",\"target\":\"address of target contract\",\"value\":\"amount of ETH\"}},\"exit(uint256)\":{\"details\":\"callable only by owner of poolId\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getConfig(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"getFeeConfig(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"getPoolIdsOf(address)\":{\"params\":{\"poolOwner\":\"address of pool owner\"},\"returns\":{\"poolIdsOwnedByPoolOwner\":\"array of owner pool ids\"}},\"getPoolNFTInfosBy(uint256[])\":{\"params\":{\"_poolIds\":\"array of poolIds\"}},\"getPositions(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"getPositionsBy(uint256[])\":{\"params\":{\"_poolIds\":\"array of poolIds\"}},\"getRoyaltyReceiver(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"receiver\":\"address of royalty receiver\"}},\"getThresholds(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"grind(uint256)\":{\"details\":\"grETH == fee spend on iterate\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\"}},\"grindOp(uint256,uint8)\":{\"params\":{\"op\":\"operation on strategy pool\",\"poolId\":\"pool id of pool in array `pools`\"}},\"grindOpTo(uint256,uint8,address)\":{\"params\":{\"grinder\":\"address of grinder, that will receive grind reward\",\"op\":\"operation on strategy pool\",\"poolId\":\"pool id of pool in array `pools`\"}},\"grindTo(uint256,address)\":{\"details\":\"grETH == fee spend on iterate\",\"params\":{\"grinder\":\"address of grinder, that will receive grind reward\",\"poolId\":\"pool id of pool in array `pools`\"}},\"init(address,address,address)\":{\"details\":\"callable only by owner\"},\"isAgentOf(address,address)\":{\"details\":\"`_ownerOf` is agent of `_ownerOf`. Approved `_agent` of `_ownerOf` is agent\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isDepositorOf(uint256,address)\":{\"params\":{\"_depositor\":\"address of account that makes deposit\",\"poolId\":\"pool id of pool in array `pools`\"}},\"mint(uint16,address,address,uint256)\":{\"details\":\"mints to `msg.sender`\",\"params\":{\"baseToken\":\"address of baseToken\",\"quoteToken\":\"address of quoteToken\",\"quoteTokenAmount\":\"amount of quoteToken to be deposited after mint\",\"strategyId\":\"id of strategy implementation\"}},\"mintTo(address,uint16,address,address,uint256)\":{\"details\":\"mints to `to`\",\"params\":{\"baseToken\":\"address of baseToken\",\"quoteToken\":\"address of quoteToken\",\"quoteTokenAmount\":\"amount of quoteToken to be deposited after mint\",\"strategyId\":\"id of strategy implementation\"}},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"rebalance(uint256,uint256,uint8,uint8)\":{\"details\":\"only owner or AI-agent of pools can rebalance with equal strategy id\",\"params\":{\"poolId0\":\"pool id of pool to rebalance\",\"poolId1\":\"pool id of pool to rebalance\",\"rebalance0\":\"left fraction of rebalanced amount\",\"rebalance1\":\"right fraction of rebalanced amount\"}},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"salePrice\":\"amount of asset\",\"tokenId\":\"pool id of pool in array `pools`\"},\"returns\":{\"receiver\":\"address of receiver\",\"royaltyAmount\":\"amount of royalty\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setAgent(address,bool)\":{\"params\":{\"_agent\":\"address of agent\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDepositor(uint256,address,bool)\":{\"params\":{\"_depositorApproval\":\"true - depositor approved, false depositor not approved\",\"depositor\":\"address of depositor\",\"poolId\":\"id of pool in array `pools`\"}},\"setGRETH(address)\":{\"params\":{\"_grETH\":\"address of grETH\"}},\"setGRETHShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setGrinderAI(address)\":{\"params\":{\"_grinderAI\":\"address of grinder AI \"}},\"setMaxDeposit(address,uint256)\":{\"params\":{\"_maxDeposit\":\"maximum amount of deposit\",\"token\":\"address of token\"}},\"setMinDeposit(address,uint256)\":{\"params\":{\"_minDeposit\":\"minimum amount of deposit\",\"token\":\"address of token\"}},\"setPoolsNFTLens(address)\":{\"params\":{\"_poolsNFTLens\":\"address of poolsNFTLens\"}},\"setRoyaltyPriceInitNumerator(uint16)\":{\"params\":{\"_royaltyPriceInitNumerator\":\"numerator of royalty price init\"}},\"setRoyaltyPriceShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setRoyaltyShares(uint16,uint16,uint16,uint16)\":{\"details\":\"callable only by owner\"},\"setStrategyFactory(address)\":{\"details\":\"callable only by strategiest\"},\"setStrategyStopped(uint16,bool)\":{\"params\":{\"_isStrategyStopped\":\"is strategy stopped. true - stopped. false - not stopped\",\"strategyId\":\"id of strategy\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\"},\"returns\":{\"uri\":\"unified reference indentificator for `tokenId`\"}},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"to\":\"address of pool receiver\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"for future DAO\"},\"withdraw(uint256,uint256)\":{\"details\":\"callcable only by owner of poolId\"},\"withdrawTo(uint256,address,uint256)\":{\"details\":\"callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken\",\"params\":{\"poolId\":\"pool id of pool in array `pools`\",\"quoteTokenAmount\":\"amount of `quoteToken`\",\"to\":\"address of receiver of withdrawed funds\"},\"returns\":{\"withdrawn\":\"amount of withdrawn quoteToken\"}}},\"stateVariables\":{\"DENOMINATOR\":{\"details\":\"this value of denominator is 100%\"},\"_agentApprovals\":{\"details\":\"owner of address => agent address => is agent of `_ownerOf`true - is agent. False - is not agent\"},\"_depositorApprovals\":{\"details\":\"pool id => owner of pool => depositor => is approved. true - approved, false - not approvedtrue - is eligible depositor. false - is not eligible depositor\"},\"deposited\":{\"details\":\"poolId => token address => deposit amount\"},\"grETH\":{\"details\":\"grETH token address\"},\"grethGrinderShareNumerator\":{\"details\":\"numerator of grinder share grETHGrinderShareNumerator == 80_00 == 80%\"},\"grethPoolOwnerShareNumerator\":{\"details\":\"numerator of pool owner shareexample: grETHPoolOwnerShareNumerator == 2_00 == 2%\"},\"grethReserveShareNumerator\":{\"details\":\"numerator of grETH reserve sharegrETHReserveShareNumerator == 15_00 == 15%\"},\"grethRoyaltyReceiverShareNumerator\":{\"details\":\"numerator of royalty receiver shareexample: grETHRoyaltyReceiverShareNumerator == 3_00 == 3%\"},\"grinderAI\":{\"details\":\"address of grinderAI smart contract\"},\"isDisapprovedGrinderAI\":{\"details\":\"owner of address => is disapproved grinder AI\"},\"isStrategyStopped\":{\"details\":\"strategyId => is strategy stoped. true - stopped. false - not stoppedby default strategy is not stopped\"},\"maxDeposit\":{\"details\":\"token address => maximum amount of depositif maxDeposit == 0, that no limut for maximum deposit\"},\"minDeposit\":{\"details\":\"token address => minimum amount to depositif minDeposit == 0, that no limit for minimum deposit\"},\"minter\":{\"details\":\"poolId => address of creator of NFT\"},\"owner\":{\"details\":\"address of grindurus protocol owner. For DAO\"},\"pendingOwner\":{\"details\":\"address of pending owner\"},\"poolIds\":{\"details\":\"pool strategy address => poolId\"},\"poolOwnerShareNumerator\":{\"details\":\"poolOwnerShareNumerator = DENOMINATOR - royaltyNumeratorexample: poolOwnerShareNumerator == 80_00 == 80%\"},\"pools\":{\"details\":\"poolId => pool strategy address\"},\"royaltyNumerator\":{\"details\":\"royaltyNumerator = DENIMINATOR - poolOwnerShareNumeratorexample: royaltyNumerator == 20_00 == 20%\"},\"royaltyOwnerShareNumerator\":{\"details\":\"example: royaltyOwnerShareNumerator == 5_00 == 5%\"},\"royaltyPrice\":{\"details\":\"poolId => royalty price[royalty price] = quote token of pool id\"},\"royaltyPriceCompensationShareNumerator\":{\"details\":\"numerator of royalty price compensation to previous owner share\"},\"royaltyPriceInitNumerator\":{\"details\":\"numerator of init royalty price\"},\"royaltyPriceOwnerShareNumerator\":{\"details\":\"numerator of royalty price owner share\"},\"royaltyPricePoolOwnerShareNumerator\":{\"details\":\"numerator of royalty price pool owner share\"},\"royaltyPriceReserveShareNumerator\":{\"details\":\"numerator of royalty price primary receiver share\"},\"royaltyReceiver\":{\"details\":\"poolId => royalty receiver\"},\"royaltyReceiverShareNumerator\":{\"details\":\"example: royaltyReceiverShareNumerator == 10_00 == 10%\"},\"royaltyReserveShareNumerator\":{\"details\":\"example: poolOwnerShareNumerator == 5_00 == 5%\"},\"strategyFactory\":{\"details\":\"strategyId => address of grindurus pool strategy implementation\"},\"totalDeposited\":{\"details\":\"token address => amount of deposit in pool\"}},\"title\":\"GrindURUS Pools NFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DENOMINATOR()\":{\"notice\":\"denominator. Used for calculating royalties\"},\"baseURI()\":{\"notice\":\"return base URI\"},\"buyRoyalty(uint256)\":{\"notice\":\"buy royalty for pool with `poolId`\"},\"buyRoyaltyTo(uint256,address)\":{\"notice\":\"buy royalty for pool with `poolId`\"},\"calcGRETHShares(uint256,uint256,address)\":{\"notice\":\"calculates shares of grETH for actors\"},\"calcRoyaltyPriceShares(uint256)\":{\"notice\":\"calc royalty prices\"},\"calcRoyaltyShares(uint256,uint256)\":{\"notice\":\"calculates royalty shares\"},\"deposit(uint256,uint256)\":{\"notice\":\"deposit `quoteToken` to pool with `poolId`\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute any transaction on target smart contract\"},\"exit(uint256)\":{\"notice\":\"exit from strategy and transfer ownership to royalty receiver\"},\"getConfig(uint256)\":{\"notice\":\"get pools config\"},\"getFeeConfig(uint256)\":{\"notice\":\"get pools fee config\"},\"getPoolIdsOf(address)\":{\"notice\":\"gets pool ids owned by `poolOwner`\"},\"getPoolNFTInfosBy(uint256[])\":{\"notice\":\"get pool nft info by pool ids\"},\"getPositions(uint256)\":{\"notice\":\"get pools positions\"},\"getPositionsBy(uint256[])\":{\"notice\":\"get positions by pool ids\"},\"getRoyaltyReceiver(uint256)\":{\"notice\":\"return royalty receiver\"},\"getThresholds(uint256)\":{\"notice\":\"gets pool thresholds\"},\"grETH()\":{\"notice\":\"reserve for accumulation of percent of strategy profits\"},\"grind(uint256)\":{\"notice\":\"grind the pool with `poolId`\"},\"grindOp(uint256,uint8)\":{\"notice\":\"grind the exact operation on the pool with `poolId`\"},\"grindOpTo(uint256,uint8,address)\":{\"notice\":\"grind the exact operation on the pool with `poolId`\"},\"grindTo(uint256,address)\":{\"notice\":\"grind the pool with `poolId` and grinder is `to`\"},\"init(address,address,address)\":{\"notice\":\"sets grETH token\"},\"isAgentOf(address,address)\":{\"notice\":\"return true, if `_agent` is agent of `_ownerOf`. Else false\"},\"isDepositorOf(uint256,address)\":{\"notice\":\"return true if `_depositor` is eligible to deposit to pool\"},\"mint(uint16,address,address,uint256)\":{\"notice\":\"mints NFT with deployment of strategy\"},\"mintTo(address,uint16,address,address,uint256)\":{\"notice\":\"mints NFT with deployment of strategy\"},\"minter(uint256)\":{\"notice\":\"store minter of pool for airdrop points\"},\"name()\":{\"notice\":\"return the name of PoolsNFT\"},\"poolOwnerShareNumerator()\":{\"notice\":\"the numerator of pool owner share\"},\"poolsNFTLens()\":{\"notice\":\"address of poolsNFTLens\"},\"rebalance(uint256,uint256,uint8,uint8)\":{\"notice\":\"rebalance the pools with poolIds `poolId0` and `poolId1`\"},\"royaltyInfo(uint256,uint256)\":{\"notice\":\"implementation of royalty standart ERC2981\"},\"royaltyNumerator()\":{\"notice\":\"the numerator of royalty\"},\"royaltyOwnerShareNumerator()\":{\"notice\":\"royalty share of owner\"},\"royaltyReceiverShareNumerator()\":{\"notice\":\"royalty share of royalty receiver. You can buy it\"},\"royaltyReserveShareNumerator()\":{\"notice\":\"royalty share of reserve. Reserve on grETH\"},\"setAgent(address,bool)\":{\"notice\":\"approve agent to msg.sender\"},\"setDepositor(uint256,address,bool)\":{\"notice\":\"approve depositor of pool\"},\"setGRETH(address)\":{\"notice\":\"sets pools NFT Image\"},\"setGRETHShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets greth shares\"},\"setGrinderAI(address)\":{\"notice\":\"sets grinder AI\"},\"setMaxDeposit(address,uint256)\":{\"notice\":\"sets maximum deposit\"},\"setMinDeposit(address,uint256)\":{\"notice\":\"sets minimum deposit\"},\"setPoolsNFTLens(address)\":{\"notice\":\"sets pools NFT Image\"},\"setRoyaltyPriceInitNumerator(uint16)\":{\"notice\":\"set royalty price init numerator\"},\"setRoyaltyPriceShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets royalty price share to actors\"},\"setRoyaltyShares(uint16,uint16,uint16,uint16)\":{\"notice\":\"sets primary receiver royalty share\"},\"setStrategyFactory(address)\":{\"notice\":\"set factrory strategy\"},\"setStrategyStopped(uint16,bool)\":{\"notice\":\"set stop on strategy with `strategyId`\"},\"symbol()\":{\"notice\":\"return the symbol of PoolsNFT\"},\"tokenURI(uint256)\":{\"notice\":\"returns tokenURI of `tokenId`\"},\"totalPools()\":{\"notice\":\"total amount of pools\"},\"transfer(address,uint256)\":{\"notice\":\"transfert poolId from `msg.sender` to `to`\"},\"transferOwnership(address)\":{\"notice\":\"First step - transfering ownership to `newOwner`         Second step - accept ownership\"},\"withdraw(uint256,uint256)\":{\"notice\":\"withdraw `quoteToken` from poolId to `msg.sender`\"},\"withdrawTo(uint256,address,uint256)\":{\"notice\":\"withdraw `quoteToken` from poolId to `to`\"}},\"notice\":\"NFT that represets ownership of every grindurus strategy pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PoolsNFT.sol\":\"PoolsNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/\",\":@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/\",\":@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/=lib/universal-router/node_modules/@uniswap/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/universal-router/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/universal-router/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":layerzero-v2/=lib/layerzero-v2/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/universal-router/lib/solmate/\",\":universal-router/=lib/universal-router/\",\":v4-core/=lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca\",\"dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00\",\"dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57\",\"dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167\",\"dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/PoolsNFT.sol\":{\"keccak256\":\"0xc2b1cbe55e60803bbbdc8db53a05010e749b9300b87b2ad40522ba50ffad5b37\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20f6741941dbc6dc3369251eab4ec374467e9c05048bf09a8de6e53785a430f9\",\"dweb:/ipfs/QmPVUX7ugagj1wEfXF6ieUN9aDvWxyShgFbq4so22SH7f5\"]},\"src/interfaces/IGRETH.sol\":{\"keccak256\":\"0x33871d2ae2e59948ddb95b6d26628476ee31357a579e8fa8d496af8220ac9664\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e3c606709d0c265e89a8881eb80bdeaf04cf7916b0cf5e697e334962cbd5030d\",\"dweb:/ipfs/QmYzgjUoBNfnbNgd2VGabrJmUrqEXm9GGnCNke3TtuLQvT\"]},\"src/interfaces/IGrinderAI.sol\":{\"keccak256\":\"0xe2ed9985cccd8500ba4de7360304b20eacdabd12b09254613130275f68a39538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c8805ca855c207236ca66c7ca1375e9594b713a9ee71bdd071fcf7052994a33\",\"dweb:/ipfs/QmSotiYbNP9n1FU7ZGg7fkY6MWm1eFc3ph7i2yYKWSUbMs\"]},\"src/interfaces/IPoolsNFT.sol\":{\"keccak256\":\"0x67952322951b09c6f47ee026f450b49bf2de01daaea937b1df9b6936554477bc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e49318926f1e95354d98ff43ed1bd78cf91bab0f8d5c0081e63140278b16632b\",\"dweb:/ipfs/QmNo2gMBq3mRSEu5cHAL1YXhDTC1zw48KTF2NYAsYpr7Hj\"]},\"src/interfaces/IPoolsNFTLens.sol\":{\"keccak256\":\"0xcc7dfe2fcb68bccec627f8bfa2e255a8f39259f7ebfe55b0a13b1c9c0ef91d06\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f5d9c01fd03a1c13523a3e39b0e1b3db6adb686585e963e12870507a26ae74bf\",\"dweb:/ipfs/QmTBwZrFWEziUtfbB4ikVjdZHD1achPNJteE7E3ntYR2Wq\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xc426247e3c4430e1f86b55c116ce122df3157b95082bbe085f91d1e737db118b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8714e784e608ab636a4749e39655c333a2716fadb00a46d5412d173a60c64706\",\"dweb:/ipfs/Qmcb2jZdg8Emgjzds7AQ5cUdQPYgGUjrgq97w8r3McNotd\"]},\"src/interfaces/IStrategyFactory.sol\":{\"keccak256\":\"0x4b0c3169fc107c1ad4e5577a3f7af7d20ceaa205fe764c4c1934b9ece62c6b76\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ba0837b414b78ac6cd58604a586d4a119a5fbc2a44f78efcb5ae1a0541584c7c\",\"dweb:/ipfs/QmdqoKEHitUwVDe9NWztdKWC2pmnYZ1pQBDZttirt6J5ug\"]},\"src/interfaces/IToken.sol\":{\"keccak256\":\"0x7afeb2f9dd0a6f2370a0d2bbc526df1d1ff99568d5f872251bb9ff3a8fae1957\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://66a6f26742b300ca56f1a86165dbd0ef390e4fc3f0c7d69c0257bb325c01d683\",\"dweb:/ipfs/QmYUeNDGkZxQYAi4viULs8X2ykDoeVboLMcsfME6zyLubz\"]},\"src/interfaces/IURUS.sol\":{\"keccak256\":\"0xb1b1c0beacbf9a0951acba0a773366408cfad06e80325612f1c2e0c1045a80bf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c07280d1e93370ec6b093495d2c8347ae072f7c4c1431f7254594a1c5fe0a71\",\"dweb:/ipfs/QmSsybhsSh2fjYv2kJFY3pisahFKyeQJH4owpg7qfiqN72\"]},\"src/interfaces/chainlink/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6a01e238a21561c68677ef04a252797d37a0422cdbb19d1891c9b995d66ff52a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://456ffa1eded32109417bfeaa6809c212b3810b292ccdbb96d1b101929f06d9fd\",\"dweb:/ipfs/QmezicUJksLkE6frHAWEkc895rZqrNr9ioyfr4knrVzT3P\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.28+commit.7893614a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "DifferentOwnersOfPools" },
        { "inputs": [], "type": "error", "name": "DifferentTokens" },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721EnumerableForbiddenBatchMint"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "approver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721OutOfBoundsIndex"
        },
        { "inputs": [], "type": "error", "name": "ExceededMaxDeposit" },
        { "inputs": [], "type": "error", "name": "InsufficientMinDeposit" },
        { "inputs": [], "type": "error", "name": "InvalidGRETHShares" },
        { "inputs": [], "type": "error", "name": "InvalidOp" },
        { "inputs": [], "type": "error", "name": "InvalidRoyaltyPriceInit" },
        { "inputs": [], "type": "error", "name": "InvalidRoyaltyPriceShare" },
        { "inputs": [], "type": "error", "name": "InvalidRoyaltyShares" },
        { "inputs": [], "type": "error", "name": "NoCapital" },
        { "inputs": [], "type": "error", "name": "NotAgent" },
        { "inputs": [], "type": "error", "name": "NotDepositor" },
        { "inputs": [], "type": "error", "name": "NotMatchPoolsNFT" },
        { "inputs": [], "type": "error", "name": "NotOwner" },
        { "inputs": [], "type": "error", "name": "NotOwnerOf" },
        { "inputs": [], "type": "error", "name": "NotOwnerOrPending" },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "StrategyStopped" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "paidPrice",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BuyRoyalty",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Exit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "op",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "grinder",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "isGrinded",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Grind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "poolId1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Rebalance",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DENOMINATOR",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyRoyalty",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyRoyaltyTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "royaltyPricePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "grethReward",
              "type": "uint256"
            },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcGRETHShares",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "actors",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "grethShares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcRoyaltyPriceShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "compensationShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolOwnerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ownerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oldRoyaltyPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newRoyaltyPrice",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint256", "name": "profit", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcRoyaltyShares",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "receivers",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposited",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseTokenAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfig",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "longNumberMax",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "hedgeNumberMax",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "extraCoef",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceVolatility",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "returnPercentLongSell",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "returnPercentHedgeSell",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "returnPercentHedgeRebuy",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeeConfig",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "longSellFeeCoef",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellFeeCoef",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeRebuyFeeCoef",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolIdsOf",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "poolIdsOwnedByPoolOwner",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolNFTInfosBy",
          "outputs": [
            {
              "internalType": "struct IPoolsNFTLens.PoolNFTInfo[]",
              "name": "poolNFTInfos",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "poolId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "struct IURUS.Config",
                  "name": "config",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "longNumberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "hedgeNumberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "extraCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceVolatilityPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentLongSell",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentHedgeSell",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnPercentHedgeRebuy",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.FeeConfig",
                  "name": "feeConfig",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "longSellFeeCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeSellFeeCoef",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "hedgeRebuyFeeCoef",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "oracleQuoteTokenPerBaseToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "oracleQuoteTokenPerFeeToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "quoteToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "feeTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "quoteTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "baseTokenSymbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "oracleQuoteTokenPerBaseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "oracleQuoteTokenPerFeeTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "quoteTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "baseTokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeCapital",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IURUS.TotalProfits",
                  "name": "totalProfits",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenYieldProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "quoteTokenTradeProfit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseTokenTradeProfit",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IPoolsNFTLens.ROI",
                  "name": "roi",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "ROINumerator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ROIDeniminator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "ROIPeriod",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IPoolsNFTLens.APR",
                  "name": "apr",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "APRNumerator",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "APRDenominator",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "royaltyPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositions",
          "outputs": [
            {
              "internalType": "struct IPoolsNFTLens.Positions",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IURUS.Position",
                  "name": "long",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.Position",
                  "name": "hedge",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionsBy",
          "outputs": [
            {
              "internalType": "struct IPoolsNFTLens.Positions[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct IURUS.Position",
                  "name": "long",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct IURUS.Position",
                  "name": "hedge",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "number",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "numberMax",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "priceMin",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "qty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feeQty",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "feePrice",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyaltyReceiver",
          "outputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getThresholds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "longBuyPriceMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longSellQuoteTokenAmountThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longSellSwapPriceThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellInitPriceThresholdHigh",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellInitPriceThresholdLow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellQuoteTokenAmountThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellTargetPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeSellSwapPriceThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeRebuyBaseTokenAmountThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hedgeRebuySwapPriceThreshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grETH",
          "outputs": [
            { "internalType": "contract IGRETH", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethGrinderShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethPoolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grethRoyaltyReceiverShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grind",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint8", "name": "op", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindOp",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "uint8", "name": "op", "type": "uint8" },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindOpTo",
          "outputs": [
            { "internalType": "bool", "name": "isGrinded", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "grinder", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grindTo",
          "outputs": [
            { "internalType": "bool", "name": "isGrinded", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "grinderAI",
          "outputs": [
            {
              "internalType": "contract IGrinderAI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolsNFTLens",
              "type": "address"
            },
            { "internalType": "address", "name": "_grETH", "type": "address" },
            {
              "internalType": "address",
              "name": "_grinderAI",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_ownerOf",
              "type": "address"
            },
            { "internalType": "address", "name": "_agent", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAgentOf",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "_depositor",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDepositorOf",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_ownerOf", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDisapprovedGrinderAI",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint16", "name": "strategyId", "type": "uint16" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStrategyStopped",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address payable", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            { "internalType": "address payable", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "pool", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolIds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pools",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolsNFTLens",
          "outputs": [
            {
              "internalType": "contract IPoolsNFTLens",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId0", "type": "uint256" },
            { "internalType": "uint256", "name": "poolId1", "type": "uint256" },
            { "internalType": "uint8", "name": "rebalance0", "type": "uint8" },
            { "internalType": "uint8", "name": "rebalance1", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rebalance"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPrice",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceCompensationShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceInitNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPricePoolOwnerShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyPriceReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReceiver",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReceiverShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyReserveShareNumerator",
          "outputs": [
            { "internalType": "uint16", "name": "", "type": "uint16" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_agent", "type": "address" },
            { "internalType": "bool", "name": "_agentApproval", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAgent"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_depositorApproval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDepositor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_grETH", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGRETH"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_grethGrinderShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethPoolOwnerShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_grethRoyaltyReceiverShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGRETHShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_grinderAI",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGrinderAI"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_maxDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxDeposit"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_minDeposit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_poolsNFTLens",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPoolsNFTLens"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_royaltyPriceInitNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyPriceInitNumerator"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_royaltyPriceCompensationShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPriceReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPricePoolOwnerShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyPriceOwnerShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyPriceShares"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "_poolOwnerRoyaltyShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyReceiverShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyReserveShareNumerator",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "_royaltyOwnerShareNumerator",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategyFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyFactory"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "strategyId",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "_isStrategyStopped",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyStopped"
        },
        {
          "inputs": [
            { "internalType": "uint16", "name": "strategyId", "type": "uint16" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyFactory",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "index", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "uri", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDeposited",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalPools",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "poolId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "poolId", "type": "uint256" },
            { "internalType": "address", "name": "to", "type": "address" },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "withdrawn",
              "type": "uint256"
            }
          ]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "baseURI()": { "details": "base URI holds on poolsNFTLens" },
          "buyRoyalty(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "_0": "royaltyPricePaid paid for royalty" }
          },
          "buyRoyaltyTo(uint256,address)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "royaltyPricePaid": "paid for royalty" }
          },
          "calcGRETHShares(uint256,uint256,address)": {
            "params": {
              "grethReward": "amount of grETH",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "calcRoyaltyPriceShares(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": {
              "compensationShare": "feeToken amount to be received to old owner as compensation",
              "newRoyaltyPrice": "feeToken amount of new royalty price",
              "oldRoyaltyPrice": "feeToken amount of old royalty price",
              "ownerShare": "feeToken amount to be received to last grinder",
              "poolOwnerShare": "feeToken amount to be received by pool owner",
              "reserveShare": "feeToken amount to be received by primary royalty receiver"
            }
          },
          "calcRoyaltyShares(uint256,uint256)": {
            "details": "returns array of receivers and amounts",
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "profit": "amount of token to be distributed"
            }
          },
          "deposit(uint256,uint256)": {
            "details": "callable only by owner of poolId",
            "params": {
              "poolId": "id of pool in array `pools`",
              "quoteTokenAmount": "amount of `quoteToken`"
            },
            "returns": {
              "_0": "depositedAmount amount of deposited `quoteToken`"
            }
          },
          "execute(address,uint256,bytes)": {
            "details": "callable only by owner",
            "params": {
              "data": "data to execute on target contract",
              "target": "address of target contract",
              "value": "amount of ETH"
            }
          },
          "exit(uint256)": {
            "details": "callable only by owner of poolId",
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getConfig(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "getFeeConfig(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "getPoolIdsOf(address)": {
            "params": { "poolOwner": "address of pool owner" },
            "returns": { "poolIdsOwnedByPoolOwner": "array of owner pool ids" }
          },
          "getPoolNFTInfosBy(uint256[])": {
            "params": { "_poolIds": "array of poolIds" }
          },
          "getPositions(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "getPositionsBy(uint256[])": {
            "params": { "_poolIds": "array of poolIds" }
          },
          "getRoyaltyReceiver(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": { "receiver": "address of royalty receiver" }
          },
          "getThresholds(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "grind(uint256)": {
            "details": "grETH == fee spend on iterate",
            "params": { "poolId": "pool id of pool in array `pools`" }
          },
          "grindOp(uint256,uint8)": {
            "params": {
              "op": "operation on strategy pool",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "grindOpTo(uint256,uint8,address)": {
            "params": {
              "grinder": "address of grinder, that will receive grind reward",
              "op": "operation on strategy pool",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "grindTo(uint256,address)": {
            "details": "grETH == fee spend on iterate",
            "params": {
              "grinder": "address of grinder, that will receive grind reward",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "init(address,address,address)": {
            "details": "callable only by owner"
          },
          "isAgentOf(address,address)": {
            "details": "`_ownerOf` is agent of `_ownerOf`. Approved `_agent` of `_ownerOf` is agent"
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isDepositorOf(uint256,address)": {
            "params": {
              "_depositor": "address of account that makes deposit",
              "poolId": "pool id of pool in array `pools`"
            }
          },
          "mint(uint16,address,address,uint256)": {
            "details": "mints to `msg.sender`",
            "params": {
              "baseToken": "address of baseToken",
              "quoteToken": "address of quoteToken",
              "quoteTokenAmount": "amount of quoteToken to be deposited after mint",
              "strategyId": "id of strategy implementation"
            }
          },
          "mintTo(address,uint16,address,address,uint256)": {
            "details": "mints to `to`",
            "params": {
              "baseToken": "address of baseToken",
              "quoteToken": "address of quoteToken",
              "quoteTokenAmount": "amount of quoteToken to be deposited after mint",
              "strategyId": "id of strategy implementation"
            }
          },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "rebalance(uint256,uint256,uint8,uint8)": {
            "details": "only owner or AI-agent of pools can rebalance with equal strategy id",
            "params": {
              "poolId0": "pool id of pool to rebalance",
              "poolId1": "pool id of pool to rebalance",
              "rebalance0": "left fraction of rebalanced amount",
              "rebalance1": "right fraction of rebalanced amount"
            }
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "salePrice": "amount of asset",
              "tokenId": "pool id of pool in array `pools`"
            },
            "returns": {
              "receiver": "address of receiver",
              "royaltyAmount": "amount of royalty"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setAgent(address,bool)": {
            "params": { "_agent": "address of agent" }
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setDepositor(uint256,address,bool)": {
            "params": {
              "_depositorApproval": "true - depositor approved, false depositor not approved",
              "depositor": "address of depositor",
              "poolId": "id of pool in array `pools`"
            }
          },
          "setGRETH(address)": { "params": { "_grETH": "address of grETH" } },
          "setGRETHShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setGrinderAI(address)": {
            "params": { "_grinderAI": "address of grinder AI " }
          },
          "setMaxDeposit(address,uint256)": {
            "params": {
              "_maxDeposit": "maximum amount of deposit",
              "token": "address of token"
            }
          },
          "setMinDeposit(address,uint256)": {
            "params": {
              "_minDeposit": "minimum amount of deposit",
              "token": "address of token"
            }
          },
          "setPoolsNFTLens(address)": {
            "params": { "_poolsNFTLens": "address of poolsNFTLens" }
          },
          "setRoyaltyPriceInitNumerator(uint16)": {
            "params": {
              "_royaltyPriceInitNumerator": "numerator of royalty price init"
            }
          },
          "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setRoyaltyShares(uint16,uint16,uint16,uint16)": {
            "details": "callable only by owner"
          },
          "setStrategyFactory(address)": {
            "details": "callable only by strategiest"
          },
          "setStrategyStopped(uint16,bool)": {
            "params": {
              "_isStrategyStopped": "is strategy stopped. true - stopped. false - not stopped",
              "strategyId": "id of strategy"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tokenByIndex(uint256)": {
            "details": "See {IERC721Enumerable-tokenByIndex}."
          },
          "tokenOfOwnerByIndex(address,uint256)": {
            "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
          },
          "tokenURI(uint256)": {
            "params": { "poolId": "pool id of pool in array `pools`" },
            "returns": {
              "uri": "unified reference indentificator for `tokenId`"
            }
          },
          "totalSupply()": {
            "details": "See {IERC721Enumerable-totalSupply}."
          },
          "transfer(address,uint256)": {
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "to": "address of pool receiver"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": { "details": "for future DAO" },
          "withdraw(uint256,uint256)": {
            "details": "callcable only by owner of poolId"
          },
          "withdrawTo(uint256,address,uint256)": {
            "details": "callcable only by owner of poolId.withdrawable when distrubution is 100% quoteToken + 0% baseToken",
            "params": {
              "poolId": "pool id of pool in array `pools`",
              "quoteTokenAmount": "amount of `quoteToken`",
              "to": "address of receiver of withdrawed funds"
            },
            "returns": { "withdrawn": "amount of withdrawn quoteToken" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DENOMINATOR()": {
            "notice": "denominator. Used for calculating royalties"
          },
          "baseURI()": { "notice": "return base URI" },
          "buyRoyalty(uint256)": {
            "notice": "buy royalty for pool with `poolId`"
          },
          "buyRoyaltyTo(uint256,address)": {
            "notice": "buy royalty for pool with `poolId`"
          },
          "calcGRETHShares(uint256,uint256,address)": {
            "notice": "calculates shares of grETH for actors"
          },
          "calcRoyaltyPriceShares(uint256)": {
            "notice": "calc royalty prices"
          },
          "calcRoyaltyShares(uint256,uint256)": {
            "notice": "calculates royalty shares"
          },
          "deposit(uint256,uint256)": {
            "notice": "deposit `quoteToken` to pool with `poolId`"
          },
          "execute(address,uint256,bytes)": {
            "notice": "execute any transaction on target smart contract"
          },
          "exit(uint256)": {
            "notice": "exit from strategy and transfer ownership to royalty receiver"
          },
          "getConfig(uint256)": { "notice": "get pools config" },
          "getFeeConfig(uint256)": { "notice": "get pools fee config" },
          "getPoolIdsOf(address)": {
            "notice": "gets pool ids owned by `poolOwner`"
          },
          "getPoolNFTInfosBy(uint256[])": {
            "notice": "get pool nft info by pool ids"
          },
          "getPositions(uint256)": { "notice": "get pools positions" },
          "getPositionsBy(uint256[])": {
            "notice": "get positions by pool ids"
          },
          "getRoyaltyReceiver(uint256)": {
            "notice": "return royalty receiver"
          },
          "getThresholds(uint256)": { "notice": "gets pool thresholds" },
          "grETH()": {
            "notice": "reserve for accumulation of percent of strategy profits"
          },
          "grind(uint256)": { "notice": "grind the pool with `poolId`" },
          "grindOp(uint256,uint8)": {
            "notice": "grind the exact operation on the pool with `poolId`"
          },
          "grindOpTo(uint256,uint8,address)": {
            "notice": "grind the exact operation on the pool with `poolId`"
          },
          "grindTo(uint256,address)": {
            "notice": "grind the pool with `poolId` and grinder is `to`"
          },
          "init(address,address,address)": { "notice": "sets grETH token" },
          "isAgentOf(address,address)": {
            "notice": "return true, if `_agent` is agent of `_ownerOf`. Else false"
          },
          "isDepositorOf(uint256,address)": {
            "notice": "return true if `_depositor` is eligible to deposit to pool"
          },
          "mint(uint16,address,address,uint256)": {
            "notice": "mints NFT with deployment of strategy"
          },
          "mintTo(address,uint16,address,address,uint256)": {
            "notice": "mints NFT with deployment of strategy"
          },
          "minter(uint256)": {
            "notice": "store minter of pool for airdrop points"
          },
          "name()": { "notice": "return the name of PoolsNFT" },
          "poolOwnerShareNumerator()": {
            "notice": "the numerator of pool owner share"
          },
          "poolsNFTLens()": { "notice": "address of poolsNFTLens" },
          "rebalance(uint256,uint256,uint8,uint8)": {
            "notice": "rebalance the pools with poolIds `poolId0` and `poolId1`"
          },
          "royaltyInfo(uint256,uint256)": {
            "notice": "implementation of royalty standart ERC2981"
          },
          "royaltyNumerator()": { "notice": "the numerator of royalty" },
          "royaltyOwnerShareNumerator()": {
            "notice": "royalty share of owner"
          },
          "royaltyReceiverShareNumerator()": {
            "notice": "royalty share of royalty receiver. You can buy it"
          },
          "royaltyReserveShareNumerator()": {
            "notice": "royalty share of reserve. Reserve on grETH"
          },
          "setAgent(address,bool)": { "notice": "approve agent to msg.sender" },
          "setDepositor(uint256,address,bool)": {
            "notice": "approve depositor of pool"
          },
          "setGRETH(address)": { "notice": "sets pools NFT Image" },
          "setGRETHShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets greth shares"
          },
          "setGrinderAI(address)": { "notice": "sets grinder AI" },
          "setMaxDeposit(address,uint256)": {
            "notice": "sets maximum deposit"
          },
          "setMinDeposit(address,uint256)": {
            "notice": "sets minimum deposit"
          },
          "setPoolsNFTLens(address)": { "notice": "sets pools NFT Image" },
          "setRoyaltyPriceInitNumerator(uint16)": {
            "notice": "set royalty price init numerator"
          },
          "setRoyaltyPriceShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets royalty price share to actors"
          },
          "setRoyaltyShares(uint16,uint16,uint16,uint16)": {
            "notice": "sets primary receiver royalty share"
          },
          "setStrategyFactory(address)": { "notice": "set factrory strategy" },
          "setStrategyStopped(uint16,bool)": {
            "notice": "set stop on strategy with `strategyId`"
          },
          "symbol()": { "notice": "return the symbol of PoolsNFT" },
          "tokenURI(uint256)": { "notice": "returns tokenURI of `tokenId`" },
          "totalPools()": { "notice": "total amount of pools" },
          "transfer(address,uint256)": {
            "notice": "transfert poolId from `msg.sender` to `to`"
          },
          "transferOwnership(address)": {
            "notice": "First step - transfering ownership to `newOwner`         Second step - accept ownership"
          },
          "withdraw(uint256,uint256)": {
            "notice": "withdraw `quoteToken` from poolId to `msg.sender`"
          },
          "withdrawTo(uint256,address,uint256)": {
            "notice": "withdraw `quoteToken` from poolId to `to`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
        "@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol/",
        "@layerzerolabs/oapp-evm/=lib/devtools/packages/oapp-evm/",
        "@layerzerolabs/oft-evm/=lib/devtools/packages/oft-evm/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/=lib/universal-router/node_modules/@uniswap/",
        "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
        "ds-test/=lib/universal-router/solmate/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/universal-router/permit2/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "hardhat/=lib/v4-core/node_modules/hardhat/",
        "layerzero-v2/=lib/layerzero-v2/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "permit2/=lib/v4-periphery/lib/permit2/",
        "solmate/=lib/universal-router/lib/solmate/",
        "universal-router/=lib/universal-router/",
        "v4-core/=lib/v4-core/src/",
        "v4-periphery/=lib/v4-periphery/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/PoolsNFT.sol": "PoolsNFT" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7",
        "urls": [
          "bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b",
          "dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
        "keccak256": "0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292",
        "urls": [
          "bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05",
          "dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
        "urls": [
          "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
          "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
        "urls": [
          "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
          "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
        "urls": [
          "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
          "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
        "urls": [
          "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
          "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6",
        "urls": [
          "bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3",
          "dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x4251fed1ac036ad28996501522371736318527d7bf2bf7d66fbd2769d6c4771b",
        "urls": [
          "bzz-raw://b2df261bd4de240f54c5829faeaf0ffc919a01f1497cf7ffd8a9a544bdec8fca",
          "dweb:/ipfs/Qmb9ndUuv9RZPKJXZGzjVuhmNuoizxuGRn4QMBmdmLcxS3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a",
        "urls": [
          "bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09",
          "dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
        "urls": [
          "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
          "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d",
        "urls": [
          "bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34",
          "dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x5191f783af281c75b7de0f1e3e36cdc6ac5cb2358d929584c4953fd02fa2b5eb",
        "urls": [
          "bzz-raw://d3ca2689d95ba45e297e55c8f71112e3ccec701d0087cb5e1c6ecb1b9ce86f00",
          "dweb:/ipfs/QmNQ5xKxJpF9k7AahnmJYvg5XeGSYtRig2Lp2WHmWXyBze"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de",
        "urls": [
          "bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff",
          "dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol": {
        "keccak256": "0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855",
        "urls": [
          "bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd",
          "dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
        "keccak256": "0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2",
        "urls": [
          "bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389",
          "dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x9e82c00fb176503860139c6bbf593b1a954ee7ff97ab2969656571382b9b58a2",
        "urls": [
          "bzz-raw://34b4eb157b44d4441315db65561ba7cf0fe909dc598c2cfd7080d203077d5b57",
          "dweb:/ipfs/QmcNdvK3kDUAUr48urHxoeHd1TqVDya4YfZTM66i4goEJn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa",
        "urls": [
          "bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287",
          "dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
        "urls": [
          "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
          "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x2c33f654cefbbe80a9b436b5792cfe8bda2e87f139f110073c99762558db252f",
        "urls": [
          "bzz-raw://dc7ebd80046a52f28978cf46a24ff3e4c8568264ab6bb138038951c75d576167",
          "dweb:/ipfs/QmQQjXVr4CbDR3DXd8GHEqn3JSJYTnbBHMJp9tvc29yXrc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "src/PoolsNFT.sol": {
        "keccak256": "0xc2b1cbe55e60803bbbdc8db53a05010e749b9300b87b2ad40522ba50ffad5b37",
        "urls": [
          "bzz-raw://20f6741941dbc6dc3369251eab4ec374467e9c05048bf09a8de6e53785a430f9",
          "dweb:/ipfs/QmPVUX7ugagj1wEfXF6ieUN9aDvWxyShgFbq4so22SH7f5"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IGRETH.sol": {
        "keccak256": "0x33871d2ae2e59948ddb95b6d26628476ee31357a579e8fa8d496af8220ac9664",
        "urls": [
          "bzz-raw://e3c606709d0c265e89a8881eb80bdeaf04cf7916b0cf5e697e334962cbd5030d",
          "dweb:/ipfs/QmYzgjUoBNfnbNgd2VGabrJmUrqEXm9GGnCNke3TtuLQvT"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IGrinderAI.sol": {
        "keccak256": "0xe2ed9985cccd8500ba4de7360304b20eacdabd12b09254613130275f68a39538",
        "urls": [
          "bzz-raw://6c8805ca855c207236ca66c7ca1375e9594b713a9ee71bdd071fcf7052994a33",
          "dweb:/ipfs/QmSotiYbNP9n1FU7ZGg7fkY6MWm1eFc3ph7i2yYKWSUbMs"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPoolsNFT.sol": {
        "keccak256": "0x67952322951b09c6f47ee026f450b49bf2de01daaea937b1df9b6936554477bc",
        "urls": [
          "bzz-raw://e49318926f1e95354d98ff43ed1bd78cf91bab0f8d5c0081e63140278b16632b",
          "dweb:/ipfs/QmNo2gMBq3mRSEu5cHAL1YXhDTC1zw48KTF2NYAsYpr7Hj"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IPoolsNFTLens.sol": {
        "keccak256": "0xcc7dfe2fcb68bccec627f8bfa2e255a8f39259f7ebfe55b0a13b1c9c0ef91d06",
        "urls": [
          "bzz-raw://f5d9c01fd03a1c13523a3e39b0e1b3db6adb686585e963e12870507a26ae74bf",
          "dweb:/ipfs/QmTBwZrFWEziUtfbB4ikVjdZHD1achPNJteE7E3ntYR2Wq"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0xc426247e3c4430e1f86b55c116ce122df3157b95082bbe085f91d1e737db118b",
        "urls": [
          "bzz-raw://8714e784e608ab636a4749e39655c333a2716fadb00a46d5412d173a60c64706",
          "dweb:/ipfs/Qmcb2jZdg8Emgjzds7AQ5cUdQPYgGUjrgq97w8r3McNotd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IStrategyFactory.sol": {
        "keccak256": "0x4b0c3169fc107c1ad4e5577a3f7af7d20ceaa205fe764c4c1934b9ece62c6b76",
        "urls": [
          "bzz-raw://ba0837b414b78ac6cd58604a586d4a119a5fbc2a44f78efcb5ae1a0541584c7c",
          "dweb:/ipfs/QmdqoKEHitUwVDe9NWztdKWC2pmnYZ1pQBDZttirt6J5ug"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IToken.sol": {
        "keccak256": "0x7afeb2f9dd0a6f2370a0d2bbc526df1d1ff99568d5f872251bb9ff3a8fae1957",
        "urls": [
          "bzz-raw://66a6f26742b300ca56f1a86165dbd0ef390e4fc3f0c7d69c0257bb325c01d683",
          "dweb:/ipfs/QmYUeNDGkZxQYAi4viULs8X2ykDoeVboLMcsfME6zyLubz"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IURUS.sol": {
        "keccak256": "0xb1b1c0beacbf9a0951acba0a773366408cfad06e80325612f1c2e0c1045a80bf",
        "urls": [
          "bzz-raw://8c07280d1e93370ec6b093495d2c8347ae072f7c4c1431f7254594a1c5fe0a71",
          "dweb:/ipfs/QmSsybhsSh2fjYv2kJFY3pisahFKyeQJH4owpg7qfiqN72"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/chainlink/AggregatorV3Interface.sol": {
        "keccak256": "0x6a01e238a21561c68677ef04a252797d37a0422cdbb19d1891c9b995d66ff52a",
        "urls": [
          "bzz-raw://456ffa1eded32109417bfeaa6809c212b3810b292ccdbb96d1b101929f06d9fd",
          "dweb:/ipfs/QmezicUJksLkE6frHAWEkc895rZqrNr9ioyfr4knrVzT3P"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 70
}
